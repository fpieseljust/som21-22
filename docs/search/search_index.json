{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Benvinguts!! Benivinguts a la web de Sistemes operatius monolloc. Curs 21/22. IES Jaume II \"El Just\" - Tavernes de la Valldigna","title":"Home"},{"location":"#benvinguts","text":"Benivinguts a la web de Sistemes operatius monolloc. Curs 21/22. IES Jaume II \"El Just\" - Tavernes de la Valldigna","title":"Benvinguts!!"},{"location":"about/","text":"Sistemes operatius monolloc IES Jaume II \"El Just\" - Tavernes de la Valldigna Curs 2021-2022 Professors: Ferran Cunyat","title":"About"},{"location":"about/#sistemes-operatius-monolloc","text":"","title":"Sistemes operatius monolloc"},{"location":"about/#ies-jaume-ii-el-just-tavernes-de-la-valldigna","text":"","title":"IES Jaume II \"El Just\" - Tavernes de la Valldigna"},{"location":"about/#curs-2021-2022","text":"Professors: Ferran Cunyat","title":"Curs 2021-2022"},{"location":"unitats/ud3-info/comandaments/","text":"Gesti\u00f3 de la informaci\u00f3 Ja hem vist com gestionar arxius i carpetes a trav\u00e9s de la interf\u00edcie gr\u00e0fica (GUI). En aquesta secci\u00f3 estudiarem els principals comandaments relacionats amb la gesti\u00f3 de la informaci\u00f3 utilitzant la l\u00ednia de comandaments (CLI): - Creaci\u00f3, modificaci\u00f3, eliminaci\u00f3... d'arxius i carpetes. - Creaci\u00f3 de taules de particions. - Formataci\u00f3 de particions. - Muntatge de particions. Execucci\u00f3 de l'interpret d'ordres Per a executar l'interpret d'ordres podeu utilitzar la drecera de teclat Ctrl + Alt + T . Altres opcions menys recomanades s\u00f3n anar a trav\u00e9s del men\u00fa d'aplicacions o utilitzar les icones d'acc\u00e9s. Prompt A l'accedir a la shell, vos apareixer\u00e0 el prompt, indicant que est\u00e0 esperant instruccions: ferran@debian:~$ ferran \u00e9s l'usuari que est\u00e0 executant la shell. debian \u00e9s el nom de la m\u00e0quina sobre la que est\u00e0 executant la shell. Ens podem connectar a altres m\u00e0quines remotes a trav\u00e9s de la shell. ~ indica que en quin directori ens trobem actualment. El s\u00edmbol ~ representa el home de l'usuari, \u00e9s a dir, substituix /home/ferran $ indica que l'usuari no t\u00e9 permisos d'administrador, en cas de tindre permissos d'administrador, apareixer\u00e0 el s\u00edmbol # . Estructura de l\u2019arbre de directoris. El sistema d'arxius de Linux t\u00e9 una estructura jer\u00e0rquica, on tots els directoris pengen d'un, anomenat arrel, que es representa pel car\u00e0cter \"/\". Penjant d'ell podem trobar altres directoris, i aix\u00ed successivament. El conjunt d'un directori de qu\u00e8 pengen altres directoris amb fitxers i m\u00e9s subdirectoris es coneix com a arbre de subdirectoris. Dels directoris m\u00e9s importants destaca el directori home , que cont\u00e9 els arxius personals dels usuaris de sistema. Altres directoris s\u00f3n els seg\u00fcents: /bin \u2192 cont\u00e9 els programes que poden executar tots els usuaris de sistema. S\u00f3n arxius binaris o executables. /boot \u2192 cont\u00e9 els fitxers de configuraci\u00f3 d'arrencada de sistema. /boot/grub \u2192 cont\u00e9 el carregador d'arrencada GRUB. /dev \u2192 cont\u00e9 els arxius de l'maquinari de el sistema. /etc \u2192 cont\u00e9 els fitxers de configuraci\u00f3 de sistema. /home \u2192 \u00e9s el directori que cont\u00e9 els directoris personals de tots els usuaris de sistema. A m\u00e9s, per a cada usuari, tindr\u00e0 el directori: /home/usuari/Escriptori \u2192 cont\u00e9 l'escriptori de l'usuari (en ocasions apareix com Desktop en lloc d'Escriptori). /lib \u2192 cont\u00e9 les biblioteques necess\u00e0ries perqu\u00e8 s'executin els programes que tenim en /bin i /sbin. /media \u2192 cont\u00e9 les unitats f\u00edsiques que tenim muntades o que es munten autom\u00e0ticament, com discs durs, unitats de DVD, pendrives ... /mnt \u2192 directori on es munten sistemes d'arxius de forma temporal, quan sigui necessari. /opt \u2192 aqu\u00ed podem instal\u00b7lar aplicacions que no v\u00e9nen en els repositoris i que per tant no s'instal\u00b7len autom\u00e0ticament. /proc \u2192 cont\u00e9 arxius que reben o envien informaci\u00f3 a l'nucli. Els fitxers que cont\u00e9 realment resideixen en mem\u00f2ria. Aquests fitxers ens permeten obtenir informaci\u00f3 sobre els processos en execuci\u00f3. Per exemple, el fitxer partitions cont\u00e9 informaci\u00f3 de les particions del disc. El fitxer sistemes de fitxers cont\u00e9 els sistemes d'arxius de sistema. /root \u2192 directori personal de l'root o administrador de sistema. /sbin \u2192 cont\u00e9 programes que nom\u00e9s pot executar el superusuari. /usr \u2192 cont\u00e9 els programes d'\u00fas general per a tots els usuaris. /tmp \u2192 cont\u00e9 arxius temporals. /var \u2192 cont\u00e9 informaci\u00f3 variable, registres, dades dels servidors, etc. /var/log \u2192 cont\u00e9 els fitxers de registre (logs). Gesti\u00f3 de fitxers i directoris. Rutes: Rutes relatives: Les rutes relatives indiquen el cam\u00ed per trobar un element, per\u00f2 basant-nos en el directori des del qual s'executa l'ordre, o sigui, des del directori on ens trobem posicionats. Per saber si s\u00f3n correctes o no hem de saber sempre des d'on s'han utilitzat. Vegem algun exemple: Si em trobe en el directori /home i voldria mourem al directori /home/usuari/carpeta1 hauria d'indicar el cam\u00ed fins on vull anar partint des d'on em trobe. Vegem cd usuari/carpeta1 Directori pare Anomenem directori pare, a directori que cont\u00e9 a aquell en el qual ens trobem. \u00c9s fonamental per a la construcci\u00f3 de rutes relatives saber que .. representa el directori pare. Per tant si executo cd .. estic donant l'ordre de canviar des del directori actual al seu pare. Si fem ls -la al directori actual ens monstra un directori . I un directori .. el primer fa refer\u00e8ncia a directori on ens trobem i el segon respectivament fa refer\u00e8ncia a directori pare. Per moure'ns cap enrere fent \u00fas de rutes relatives podem indicar-li a l'ordre cd que es mogui al seu directori pare (un nivell dins de la jerarquia cap enrere) o de diversos alhora depenent de cap a on vulguem moure'ns. Si estem a la carpeta1 i volem pujar 3 nivells seria cd ../../.. Rutes absolutes: El sistema de fitxers \u00e9s una estructura jer\u00e0rquica que en el cas de Linux t\u00e9 una arrel que s'indica quan es posa nom\u00e9s el car\u00e0cter barra /. L'arrel cont\u00e9 els directoris principals de sistema que a la vegada tindran subdirectoris en el seu interior, aquesta estructura de directoris es correspon amb l'est\u00e0ndard de jerarquies de directoris FHS. Quan jo vull indicar on es troba un element fent servir una ruta absoluta, haur\u00e9 d\u2019indicar-li tots els directoris pels quals cal passar comen\u00e7ant des de l'arrel de sistema, SEMPRE. Exemple: al cas anterior, tenint en compte la imatge per accedir a carpeta1 cd /home/usuario/carpeta1 Aquestes rutes solen ser bastant llargues, per\u00f2 com avantatge tenen que funcionen sempre, sense importar el lloc des del qual executi l'ordre. \u00c9s molt recomanable utilitzar la facilitat que ofereix la shell de completar el nom d'un element de sistema de fitxers prement la tecla tabulador. Estalviar\u00e0 molt de temps i possibles errors de mecanografia (tenint en compte que es discriminen maj\u00fascules i min\u00fascules en els noms dels directoris), a aquesta acci\u00f3 la coneixem com autocompletat. Ordres b\u00e0siques: ls La comanda ls permet llistar el contingut d'un directori. Sintaxi: ls [opcions] [directori | fitxer] Algunes opcions: -l: mostra la sortida en format llarg. -R: llista recursivament un directori. -a: llista m\u00e9s els fitxers ocults. Recordeu que els arxius ocults comencen per punt. -h: mostra la mida dels fitxers en forma m\u00e9s llegible (Ex .: 16M, 4k, etc.) -i: mostra l'identificador de l'i-node associat a cada element. Globbing : wildcards (comodins) i opcions El Globbing ens permet trobar arxius dels quals no coneixem el nom exacte per\u00f2 tenim una idea quins elements de text el componen. Per aix\u00f2 utilitzem els anomenats wildcards (comodins) de manera que aquests serveixen per trobar patrons durant les b\u00fasquedes. Hem vist anteriorment que l'ordre ls llista fitxers i directoris. Suposem que volem llistar nom\u00e9s aquells fitxers que tinguin l'extensi\u00f3 \u201c.doc\u201d. Amb la seg\u00fcent ordre ho aconseguirem: $ ls *.doc En aquest exemple hem indicat que lliste qualsevol arxiu amb l'extensi\u00f3 \u201c.doc\u201d. L'asterisc fa la funci\u00f3 de comod\u00ed (qualsevol cadena de car\u00e0cters). Els car\u00e0cters comod\u00ed poden apareixer al principi, al final o entre mig dels patrons, incl\u00fas poden apar\u00e9ixer diverses vegades. Aix\u00ed com el car\u00e0cter asterisc substitueix qualsevol cadena de text, de longitud indeterminada, el car\u00e0cter ? substitueix un \u00fanic car\u00e0cter, de longitud 1. En aquest cas tamb\u00e9 poden apar\u00e9ixer diverses vegades i en diverses posicions. Per exemple: $ ls arxiu-?.jpg Llistar\u00e0 arxius com arxiu-1.jpg, arxiu-a.jpg... Per\u00f2 no arxius com arxiu-12.jpg. Tenim la possibilitat de passar-li diferents opcions per fer globbing utilitzant els car\u00e0cters {} . Per exemple, si volem llistar els directoris /dev i /home a la vegada, podem fer ls /{dev,home} . Tamb\u00e9 podem utilitzar els mateixos car\u00e0cters per generar opcions num\u00e8riques de forma molt comprimida, per exemple ls {1..9} llistar\u00e0 el contingut de les carpetes 1 a 9. Si no volem que genere d'un en un les llistes num\u00e8riques, li podem indicar un bot en un tercer par\u00e0metre. ls {1..10..2} llistaria el contingut de les carpetes 1,3,5,7 i 9. El globbing es pot utilitzar en altres ordres tamb\u00e9. Exemples: Des del teu directori personal, mostra en format llarg els fitxers tty0 a tty9 de directori /dev, utilitzant car\u00e0cters comodins. Mostra ara els fitxers de directori /dev que comencin per tty, independentment del car\u00e0cters hagi despr\u00e9s. Mostra les entrades del teu directori personal, de manera que et mostri l'i-node de cadascuna i informaci\u00f3 sobre el tipus de fitxer. Mostra les entrades del teu directori personal, en format llarg. Mostra-ara amb la mida dels fitxers en la unitat de mesura m\u00e9s gran que es pugui cd La comanda cd s'utilitza per canviar el directori actual. Sintaxi: cd [directori] exemples: $cd /tmp $cd #canvia a el directori home $cd ~ #canvia a el directori home pwd La comanda pwd indica el cam\u00ed absolut de directori en el qual ens trobem actualment. exemple: $pwd # ens torna alguna cosa com /home/ubuntu Exemples: Mostra la ruta absoluta de directori on est\u00e0s. Mou-te a directori arrel. Aneu ara a directori /etc/init.d Utilitza la comanda que et porti a directori d'on v\u00e9ns. Comprova on estas. soluci\u00f3: pwd cd / cd /etc/init.d cd ~ pwd mkdir La comanda mkdir s'utilitza per crear directoris. exemples: $mkdir bin $mkdir /bin $mkdir -p docs/linuxdocs HOWTO/pdf #es creen els directoris intermedis si cal mv La comanda mv mou un fitxer cap a un altre, o diversos fitxers cap a un directori. Aquest permet al seu torn canviar el nom fitxers o directoris. Sintaxi: mv [opcions] <orige> <dest\u00ed> mv [opcions] <fitxers> <directori> Algunes opcions: -i: executa la comanda de forma interactiva, \u00e9s a dir, pregunta davant de sobreescriure el dest\u00ed si exist\u00eds. -u: actualitza (upgrade) el dest\u00ed amb el orige nom\u00e9s si aquest \u00e9s m\u00e9s recent. exemples: $mv mail.cf mail.cf.old #reanomeneu un fitxer $mv -i *.txt /tmp #mou fitxers acabats en .txt a directori /tmp $mv -u program.c src/ #actualitza el fitxer dest\u00ed si \u00e9s menys recent que el d\u2019orige. cp La comanda cp permet copiar un fitxer en un altre, o diversos fitxers en un directori. sintaxi: cp [opcions] <font> <dest\u00ed> cp [opcions] <fitxers> <directori> Algunes opcions: -R: c\u00f2pia recursivament un directori. -i: utilitza una forma interactiva (pregunta abans de sobreescriure el dest\u00ed). -l: fa enlla\u00e7os forts als fitxers fonts en lloc de copiar-los. exemples: $cp /etc/passwd. # C\u00f2pia un fitxer en el directori actual $cp -i /usr/bin/* sh/tmp # c\u00f2pia interactivament els fitxers acabats en sh en un directori anomenat /tmp rm La comanda rm s'utilitza per esborrar (desenlla\u00e7ar) fitxers Sintaxi: rm [opcions] <fitxers|directoris> Algunes opcions: -r: esborra recursivament un directori. -f: esborra for\u00e7osament en cas que no es tingui perm\u00eds d'escriptura en forma directa. -i: executa la comanda de forma interactiva. exemples: $rm prova $rm -i bin/* $rm -rf /tmp file mostra el tipus de fitxer du (disk usage) mostra l'espai que ocupa el fitxer o directori opcions: -b \u2192 mostra la mida en bytes -h \u2192 mostra la mida en la unitat de mesura m\u00e9s gran, perqu\u00e8 s'entengui millor df (display free) mostra l'espai lliure en els dispositius d'emmagatzematge opcions: -h \u2192 mostra la mida en la unitat de mesura m\u00e9s -k \u2192 --blok-size = 1K -a \u2192 mostra tots, fins i tot els que tinguin mida 0 cat (catenate) mostra el contingut dels fitxers que se li passin com arguments. opcions: -n \u2192 enumera totes les l\u00ednies. head mostra les 10 primeres l\u00ednies dels fitxers que s'indiquin opcions: -n \u2192 mostra les n primeres l\u00ednies en lloc de les 10 primeres. tail mostra les 10 \u00faltimes l\u00ednies dels fitxers que se li indiquin opcions: -n \u2192 mostra les n darreres l\u00ednies -f \u2192 mostra les modificacions de el fitxer en temps real more mostra el contingut dels fitxers per\u00f2 de forma paginada. A difer\u00e8ncia de la comanda cat, quan mostri el contingut de l'arxiu, si aquest ocupa m\u00e9s d'una pantalla, es quedar\u00e0 esperant que es premi una tecla. Si \u00e9s la barra d'espai, s'avan\u00e7ar\u00e0 una p\u00e0gina, i si \u00e9s la tecla enter, s'avan\u00e7ar\u00e0 una l\u00ednia. Amb la tecla q finalitzar\u00e0 l'execuci\u00f3. less mostra el contingut dels fitxers de la mateixa manera que more, amb la difer\u00e8ncia que podem moure'ns per ells utilitzant les tecles de cursor. Filtres i readre\u00e7aments: sort La comanda sort ordena les l\u00ednies d'un fitxer mostrant per la sortida est\u00e0ndard. De no especificar-un fitxer pren l'entrada est\u00e0ndard. Sintaxi: sort [opcions] [fitxer] Algunes opcions: -r: ordena a l'inrev\u00e9s. -f: tracta les maj\u00fascules i min\u00fascules per igual. -g: ordena de forma num\u00e8rica, de manera que no cal que els n\u00fameros es omplin amb zeros per l'esquerra. Exemple: $sort -f /etc/passwd ln crea un enlla\u00e7 a el fitxer o directori que se li especifiqui. Si \u00e9s a un directori, l'enlla\u00e7 ser\u00e0 simb\u00f2lic. opcions: -s \u2192 crea un enlla\u00e7 simb\u00f2lic en comptes de dur -t \u2192 especifica el directori on es crearan els enlla\u00e7os cut mostra nom\u00e9s certes l\u00ednies dels fitxers que se li passin com a argument. opcions: -b \u2192 mostra nom\u00e9s els bytes que se li especifiquin -c \u2192 mostra nom\u00e9s els car\u00e0cters que se li especifiquin -d \u2192 fa servir el car\u00e0cter que se li especifiqui com a delimitador en comptes del tabulador -f \u2192 mostra nom\u00e9s els camps que se li indiquin a la llista. Pot ser un camp, una s\u00e8rie de camps separats per comes o un rang. -s \u2192 no mostra les l\u00ednies que no continguin el delimitador --output-delimiter = cadena \u2192 fa servir la cadena com a delimitador de sortida en comptes del delimitador d'entrada. grep mostra les l\u00ednies d'un fitxer que coincideixen amb un patr\u00f3 especificat. opcions: -r \u2192 -R \u2192 per buscar de forma recursiva dins dels fitxers d'un directori -n \u2192 mostra el nombre corresponent de la l\u00ednia en qu\u00e8 es troba el patr\u00f3 -i \u2192 no distingeix entre maj\u00fascules i min\u00fascules -v \u2192 mostra les l\u00ednies que no es corresponen amb el patr\u00f3 -w \u2192 el patr\u00f3 ha d'apar\u00e8ixer com una paraula completa i no com una part d'una paraula -c \u2192 escriu el nombre de l\u00ednies que satisfan la condici\u00f3 -l \u2192 s'escriuen els noms dels fitxers que contenen l\u00ednies buscades patr\u00f3: *text* \u2192 l\u00ednies que continguin la cadena \"text\" ^text \u2192 l\u00ednies que comencin per \"text\" ^[^text] \u2192 l\u00ednies que no comencen per \"text\" *text \u2192 l\u00ednies que acabin per \"text\" readre\u00e7aments < \u2192 redirecciona l'entrada est\u00e0ndard substituint-la per l'arxiu que s'indique. > \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. >> \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. 2> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. 2>> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. Filtres o canonades Les canonades o filtres s'utilitzen en una l\u00ednia d'ordres per a connectar la sortida est\u00e0ndard d'una ordre amb l'entrada est\u00e0ndard d'un altre. Per a aix\u00f2 s'utilitza el car\u00e0cter |. Comprimir/descomprimir Comanda gzip: Si el que necessites \u00e9s comprimir nom\u00e9s un arxiu, nom\u00e9s cal escriure el seu nom despr\u00e9s de la comanda gzip. Si no et trobes en el mateix directori on estan ubicats els arxius, haur\u00e0s d'escriure tamb\u00e9 la ruta. Una cosa semblant al que fem en el seg\u00fcent exemple: gzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg\" (crearia un fitxer amb extensi\u00f3 .gz) Per a descomprimir-lo utilitzariem l\u2019ordre : gunzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg.gz\" Podem comprimir m\u00e9s d\u2019un arxiu a la vegada i crear\u00e0 3 fitxers nous comprimits: gzip arxiu1.txt arxiu2.txt arxiu3.txt Comanda tar: En realitat, l'ordre tar est\u00e0 pensat per crear un nou arxiu que actu\u00ef com a contenidor d'altres arxius, per\u00f2 no els comprimeix. Aix\u00ed, per exemple, podem crear un arxiu que contingui en el seu interior totes les imatges en format jpeg d'un directori, escrivint la seg\u00fcent ordre: tar -vcf ~/Imatges/wallpaper/imagenes.tar ~ /Imatges/wallpaper/*.jpeg ``` En el nostre exemple, hem utilitzat la mateixa ruta com a origen i com a destinaci\u00f3, perqu\u00e8 puguis veure a la finestra de l'explorador d'arxius del que est\u00e0 passant. No obstant aix\u00f2, tu pots fer servir les que prefereixis.En aquest cas, l'argument v ens permet obtenir detalls de l'funcionament de tar, l'argument c indica que volem crear un arxiu i l'argument f especifica el nom de l'arxiu contenidor (en aquest exemple, Im\u00e1genes.tar). A continuaci\u00f3, nom\u00e9s ens falta incloure els arxius que anem a emmagatzemar en el contenidor (en el nostre exemple, tots els que acabin en .jpeg). Comprovar el contingut d'un arxiu contenidor Un cop creat l'arxiu contenidor, podrem consultar el seu contingut canviant l'argument c per t. Aix\u00ed, per veure el contingut de l'arxiu anterior, escriurem el seg\u00fcent: tar -vtf imagenes.tar Hem dit a el principi que l'ordre tar, per si mateix, no comprimeix la informaci\u00f3 que guarda dins de l'arxiu contenidor. No obstant aix\u00f2, podem utilitzar l'argument z perqu\u00e8 la sortida de l'ordre tar s'envi\u00ef a la comanda gzip obtenint aix\u00ed un arxiu comprimit. Per comprovar-ho, tornem a la carpeta amb les imatges originals: tar -czvf imagenes.tar.gz *.jpeg A m\u00e9s, fins i tot podem triar enviar-los a bzip2, un altre comanda de compressi\u00f3 que aplica algoritmes diferents a gzip. Per aconseguir-ho, nom\u00e9s cal canviar l'argument z, que afeg\u00edem en l'exemple anterior, pel l'argument j. Per comptant, la comanda ens quedaria aix\u00ed: tar -cjvf imagenes.tar.bz2 *.jpeg ### Comanada unzip Per a descomprimir arxius comprimits amb zip, simplement utilitzarem: ```bash unzip arxiu.zip Algunes opcions interessants: -d \"carpeta\" per a descomprimir a esta carpeta1 -l per a llistar els arxius sense descomprimir Comanada zip Per a crear arxius comprimits amb zip utilitzarem aquesta ordre. zip -r arxiu.zip carpeta L'anterior ordre crear\u00e0 arxiu.zip amb tot el contingut de la carpeta. Busqueda d'arxius Comanda find Amb find podem buscar arxius a l'arbre de directoris a partir de la ruta que li indiquem. La seua sintaxi \u00e9s: find <directori d'inici> <opcions> <terme buscat> Opcions importants: -name busca un arxiu per nom. -iname buca un arxiu per nom sense difer\u00e8nciar entre maj\u00fascules i min\u00fascules. -not busca arxius que no complisquen amb el terme buscat. -delete al final de l'ordre elimina els arxius trobats. -type per a especificar un tipus d per a directories f per a arxius regulars -size b\u00fasqueda per tamany amb les seg\u00fcents unitats (amb els s\u00edmbols + i - indiquem tamany major a o menor a): -c -> B -k -> KB -M -> MG -G -> GB -b -> blocs (512B normalment) Exemples: find . -iname arxiu find . -not -name \"*.pdf\" find . -name \"*.bak\" -delete find / -type d -name \"carpeta*\" find / -size +5G Comanada locate Amb esta comanda tamb\u00e9 podem buscar arxius a la base de dades de Linux. Per\u00f2 en algunes distribucions no ve instal\u00b7lat per defecte: locate <opcions> <terme buscat> Opcions importants: - -i per a no distinguir entre maj\u00fascules i min\u00fascules - -q per a desactivar errors Exemples: locate -iq Arxiu","title":"Teoria"},{"location":"unitats/ud3-info/comandaments/#gestio-de-la-informacio","text":"Ja hem vist com gestionar arxius i carpetes a trav\u00e9s de la interf\u00edcie gr\u00e0fica (GUI). En aquesta secci\u00f3 estudiarem els principals comandaments relacionats amb la gesti\u00f3 de la informaci\u00f3 utilitzant la l\u00ednia de comandaments (CLI): - Creaci\u00f3, modificaci\u00f3, eliminaci\u00f3... d'arxius i carpetes. - Creaci\u00f3 de taules de particions. - Formataci\u00f3 de particions. - Muntatge de particions.","title":"Gesti\u00f3 de la informaci\u00f3"},{"location":"unitats/ud3-info/comandaments/#execuccio-de-linterpret-dordres","text":"Per a executar l'interpret d'ordres podeu utilitzar la drecera de teclat Ctrl + Alt + T . Altres opcions menys recomanades s\u00f3n anar a trav\u00e9s del men\u00fa d'aplicacions o utilitzar les icones d'acc\u00e9s.","title":"Execucci\u00f3 de l'interpret d'ordres"},{"location":"unitats/ud3-info/comandaments/#prompt","text":"A l'accedir a la shell, vos apareixer\u00e0 el prompt, indicant que est\u00e0 esperant instruccions: ferran@debian:~$ ferran \u00e9s l'usuari que est\u00e0 executant la shell. debian \u00e9s el nom de la m\u00e0quina sobre la que est\u00e0 executant la shell. Ens podem connectar a altres m\u00e0quines remotes a trav\u00e9s de la shell. ~ indica que en quin directori ens trobem actualment. El s\u00edmbol ~ representa el home de l'usuari, \u00e9s a dir, substituix /home/ferran $ indica que l'usuari no t\u00e9 permisos d'administrador, en cas de tindre permissos d'administrador, apareixer\u00e0 el s\u00edmbol # .","title":"Prompt"},{"location":"unitats/ud3-info/comandaments/#estructura-de-larbre-de-directoris","text":"El sistema d'arxius de Linux t\u00e9 una estructura jer\u00e0rquica, on tots els directoris pengen d'un, anomenat arrel, que es representa pel car\u00e0cter \"/\". Penjant d'ell podem trobar altres directoris, i aix\u00ed successivament. El conjunt d'un directori de qu\u00e8 pengen altres directoris amb fitxers i m\u00e9s subdirectoris es coneix com a arbre de subdirectoris. Dels directoris m\u00e9s importants destaca el directori home , que cont\u00e9 els arxius personals dels usuaris de sistema. Altres directoris s\u00f3n els seg\u00fcents: /bin \u2192 cont\u00e9 els programes que poden executar tots els usuaris de sistema. S\u00f3n arxius binaris o executables. /boot \u2192 cont\u00e9 els fitxers de configuraci\u00f3 d'arrencada de sistema. /boot/grub \u2192 cont\u00e9 el carregador d'arrencada GRUB. /dev \u2192 cont\u00e9 els arxius de l'maquinari de el sistema. /etc \u2192 cont\u00e9 els fitxers de configuraci\u00f3 de sistema. /home \u2192 \u00e9s el directori que cont\u00e9 els directoris personals de tots els usuaris de sistema. A m\u00e9s, per a cada usuari, tindr\u00e0 el directori: /home/usuari/Escriptori \u2192 cont\u00e9 l'escriptori de l'usuari (en ocasions apareix com Desktop en lloc d'Escriptori). /lib \u2192 cont\u00e9 les biblioteques necess\u00e0ries perqu\u00e8 s'executin els programes que tenim en /bin i /sbin. /media \u2192 cont\u00e9 les unitats f\u00edsiques que tenim muntades o que es munten autom\u00e0ticament, com discs durs, unitats de DVD, pendrives ... /mnt \u2192 directori on es munten sistemes d'arxius de forma temporal, quan sigui necessari. /opt \u2192 aqu\u00ed podem instal\u00b7lar aplicacions que no v\u00e9nen en els repositoris i que per tant no s'instal\u00b7len autom\u00e0ticament. /proc \u2192 cont\u00e9 arxius que reben o envien informaci\u00f3 a l'nucli. Els fitxers que cont\u00e9 realment resideixen en mem\u00f2ria. Aquests fitxers ens permeten obtenir informaci\u00f3 sobre els processos en execuci\u00f3. Per exemple, el fitxer partitions cont\u00e9 informaci\u00f3 de les particions del disc. El fitxer sistemes de fitxers cont\u00e9 els sistemes d'arxius de sistema. /root \u2192 directori personal de l'root o administrador de sistema. /sbin \u2192 cont\u00e9 programes que nom\u00e9s pot executar el superusuari. /usr \u2192 cont\u00e9 els programes d'\u00fas general per a tots els usuaris. /tmp \u2192 cont\u00e9 arxius temporals. /var \u2192 cont\u00e9 informaci\u00f3 variable, registres, dades dels servidors, etc. /var/log \u2192 cont\u00e9 els fitxers de registre (logs).","title":"Estructura de l\u2019arbre de directoris."},{"location":"unitats/ud3-info/comandaments/#gestio-de-fitxers-i-directoris","text":"","title":"Gesti\u00f3 de fitxers i directoris."},{"location":"unitats/ud3-info/comandaments/#rutes","text":"","title":"Rutes:"},{"location":"unitats/ud3-info/comandaments/#rutes-relatives","text":"Les rutes relatives indiquen el cam\u00ed per trobar un element, per\u00f2 basant-nos en el directori des del qual s'executa l'ordre, o sigui, des del directori on ens trobem posicionats. Per saber si s\u00f3n correctes o no hem de saber sempre des d'on s'han utilitzat. Vegem algun exemple: Si em trobe en el directori /home i voldria mourem al directori /home/usuari/carpeta1 hauria d'indicar el cam\u00ed fins on vull anar partint des d'on em trobe. Vegem cd usuari/carpeta1","title":"Rutes relatives:"},{"location":"unitats/ud3-info/comandaments/#directori-pare","text":"Anomenem directori pare, a directori que cont\u00e9 a aquell en el qual ens trobem. \u00c9s fonamental per a la construcci\u00f3 de rutes relatives saber que .. representa el directori pare. Per tant si executo cd .. estic donant l'ordre de canviar des del directori actual al seu pare. Si fem ls -la al directori actual ens monstra un directori . I un directori .. el primer fa refer\u00e8ncia a directori on ens trobem i el segon respectivament fa refer\u00e8ncia a directori pare. Per moure'ns cap enrere fent \u00fas de rutes relatives podem indicar-li a l'ordre cd que es mogui al seu directori pare (un nivell dins de la jerarquia cap enrere) o de diversos alhora depenent de cap a on vulguem moure'ns. Si estem a la carpeta1 i volem pujar 3 nivells seria cd ../../..","title":"Directori pare"},{"location":"unitats/ud3-info/comandaments/#rutes-absolutes","text":"El sistema de fitxers \u00e9s una estructura jer\u00e0rquica que en el cas de Linux t\u00e9 una arrel que s'indica quan es posa nom\u00e9s el car\u00e0cter barra /. L'arrel cont\u00e9 els directoris principals de sistema que a la vegada tindran subdirectoris en el seu interior, aquesta estructura de directoris es correspon amb l'est\u00e0ndard de jerarquies de directoris FHS. Quan jo vull indicar on es troba un element fent servir una ruta absoluta, haur\u00e9 d\u2019indicar-li tots els directoris pels quals cal passar comen\u00e7ant des de l'arrel de sistema, SEMPRE. Exemple: al cas anterior, tenint en compte la imatge per accedir a carpeta1 cd /home/usuario/carpeta1 Aquestes rutes solen ser bastant llargues, per\u00f2 com avantatge tenen que funcionen sempre, sense importar el lloc des del qual executi l'ordre. \u00c9s molt recomanable utilitzar la facilitat que ofereix la shell de completar el nom d'un element de sistema de fitxers prement la tecla tabulador. Estalviar\u00e0 molt de temps i possibles errors de mecanografia (tenint en compte que es discriminen maj\u00fascules i min\u00fascules en els noms dels directoris), a aquesta acci\u00f3 la coneixem com autocompletat.","title":"Rutes absolutes:"},{"location":"unitats/ud3-info/comandaments/#ordres-basiques","text":"","title":"Ordres b\u00e0siques:"},{"location":"unitats/ud3-info/comandaments/#ls","text":"La comanda ls permet llistar el contingut d'un directori. Sintaxi: ls [opcions] [directori | fitxer] Algunes opcions: -l: mostra la sortida en format llarg. -R: llista recursivament un directori. -a: llista m\u00e9s els fitxers ocults. Recordeu que els arxius ocults comencen per punt. -h: mostra la mida dels fitxers en forma m\u00e9s llegible (Ex .: 16M, 4k, etc.) -i: mostra l'identificador de l'i-node associat a cada element.","title":"ls"},{"location":"unitats/ud3-info/comandaments/#globbing-wildcards-comodins-i-opcions","text":"El Globbing ens permet trobar arxius dels quals no coneixem el nom exacte per\u00f2 tenim una idea quins elements de text el componen. Per aix\u00f2 utilitzem els anomenats wildcards (comodins) de manera que aquests serveixen per trobar patrons durant les b\u00fasquedes. Hem vist anteriorment que l'ordre ls llista fitxers i directoris. Suposem que volem llistar nom\u00e9s aquells fitxers que tinguin l'extensi\u00f3 \u201c.doc\u201d. Amb la seg\u00fcent ordre ho aconseguirem: $ ls *.doc En aquest exemple hem indicat que lliste qualsevol arxiu amb l'extensi\u00f3 \u201c.doc\u201d. L'asterisc fa la funci\u00f3 de comod\u00ed (qualsevol cadena de car\u00e0cters). Els car\u00e0cters comod\u00ed poden apareixer al principi, al final o entre mig dels patrons, incl\u00fas poden apar\u00e9ixer diverses vegades. Aix\u00ed com el car\u00e0cter asterisc substitueix qualsevol cadena de text, de longitud indeterminada, el car\u00e0cter ? substitueix un \u00fanic car\u00e0cter, de longitud 1. En aquest cas tamb\u00e9 poden apar\u00e9ixer diverses vegades i en diverses posicions. Per exemple: $ ls arxiu-?.jpg Llistar\u00e0 arxius com arxiu-1.jpg, arxiu-a.jpg... Per\u00f2 no arxius com arxiu-12.jpg. Tenim la possibilitat de passar-li diferents opcions per fer globbing utilitzant els car\u00e0cters {} . Per exemple, si volem llistar els directoris /dev i /home a la vegada, podem fer ls /{dev,home} . Tamb\u00e9 podem utilitzar els mateixos car\u00e0cters per generar opcions num\u00e8riques de forma molt comprimida, per exemple ls {1..9} llistar\u00e0 el contingut de les carpetes 1 a 9. Si no volem que genere d'un en un les llistes num\u00e8riques, li podem indicar un bot en un tercer par\u00e0metre. ls {1..10..2} llistaria el contingut de les carpetes 1,3,5,7 i 9. El globbing es pot utilitzar en altres ordres tamb\u00e9. Exemples: Des del teu directori personal, mostra en format llarg els fitxers tty0 a tty9 de directori /dev, utilitzant car\u00e0cters comodins. Mostra ara els fitxers de directori /dev que comencin per tty, independentment del car\u00e0cters hagi despr\u00e9s. Mostra les entrades del teu directori personal, de manera que et mostri l'i-node de cadascuna i informaci\u00f3 sobre el tipus de fitxer. Mostra les entrades del teu directori personal, en format llarg. Mostra-ara amb la mida dels fitxers en la unitat de mesura m\u00e9s gran que es pugui","title":"Globbing: wildcards (comodins) i opcions"},{"location":"unitats/ud3-info/comandaments/#cd","text":"La comanda cd s'utilitza per canviar el directori actual. Sintaxi: cd [directori] exemples: $cd /tmp $cd #canvia a el directori home $cd ~ #canvia a el directori home","title":"cd"},{"location":"unitats/ud3-info/comandaments/#pwd","text":"La comanda pwd indica el cam\u00ed absolut de directori en el qual ens trobem actualment. exemple: $pwd # ens torna alguna cosa com /home/ubuntu Exemples: Mostra la ruta absoluta de directori on est\u00e0s. Mou-te a directori arrel. Aneu ara a directori /etc/init.d Utilitza la comanda que et porti a directori d'on v\u00e9ns. Comprova on estas. soluci\u00f3: pwd cd / cd /etc/init.d cd ~ pwd","title":"pwd"},{"location":"unitats/ud3-info/comandaments/#mkdir","text":"La comanda mkdir s'utilitza per crear directoris. exemples: $mkdir bin $mkdir /bin $mkdir -p docs/linuxdocs HOWTO/pdf #es creen els directoris intermedis si cal","title":"mkdir"},{"location":"unitats/ud3-info/comandaments/#mv","text":"La comanda mv mou un fitxer cap a un altre, o diversos fitxers cap a un directori. Aquest permet al seu torn canviar el nom fitxers o directoris. Sintaxi: mv [opcions] <orige> <dest\u00ed> mv [opcions] <fitxers> <directori> Algunes opcions: -i: executa la comanda de forma interactiva, \u00e9s a dir, pregunta davant de sobreescriure el dest\u00ed si exist\u00eds. -u: actualitza (upgrade) el dest\u00ed amb el orige nom\u00e9s si aquest \u00e9s m\u00e9s recent. exemples: $mv mail.cf mail.cf.old #reanomeneu un fitxer $mv -i *.txt /tmp #mou fitxers acabats en .txt a directori /tmp $mv -u program.c src/ #actualitza el fitxer dest\u00ed si \u00e9s menys recent que el d\u2019orige.","title":"mv"},{"location":"unitats/ud3-info/comandaments/#cp","text":"La comanda cp permet copiar un fitxer en un altre, o diversos fitxers en un directori. sintaxi: cp [opcions] <font> <dest\u00ed> cp [opcions] <fitxers> <directori> Algunes opcions: -R: c\u00f2pia recursivament un directori. -i: utilitza una forma interactiva (pregunta abans de sobreescriure el dest\u00ed). -l: fa enlla\u00e7os forts als fitxers fonts en lloc de copiar-los. exemples: $cp /etc/passwd. # C\u00f2pia un fitxer en el directori actual $cp -i /usr/bin/* sh/tmp # c\u00f2pia interactivament els fitxers acabats en sh en un directori anomenat /tmp","title":"cp"},{"location":"unitats/ud3-info/comandaments/#rm","text":"La comanda rm s'utilitza per esborrar (desenlla\u00e7ar) fitxers Sintaxi: rm [opcions] <fitxers|directoris> Algunes opcions: -r: esborra recursivament un directori. -f: esborra for\u00e7osament en cas que no es tingui perm\u00eds d'escriptura en forma directa. -i: executa la comanda de forma interactiva. exemples: $rm prova $rm -i bin/* $rm -rf /tmp","title":"rm"},{"location":"unitats/ud3-info/comandaments/#file","text":"mostra el tipus de fitxer","title":"file"},{"location":"unitats/ud3-info/comandaments/#du-disk-usage","text":"mostra l'espai que ocupa el fitxer o directori opcions: -b \u2192 mostra la mida en bytes -h \u2192 mostra la mida en la unitat de mesura m\u00e9s gran, perqu\u00e8 s'entengui millor","title":"du (disk usage)"},{"location":"unitats/ud3-info/comandaments/#df-display-free","text":"mostra l'espai lliure en els dispositius d'emmagatzematge opcions: -h \u2192 mostra la mida en la unitat de mesura m\u00e9s -k \u2192 --blok-size = 1K -a \u2192 mostra tots, fins i tot els que tinguin mida 0","title":"df (display free)"},{"location":"unitats/ud3-info/comandaments/#cat-catenate","text":"mostra el contingut dels fitxers que se li passin com arguments. opcions: -n \u2192 enumera totes les l\u00ednies.","title":"cat (catenate)"},{"location":"unitats/ud3-info/comandaments/#head","text":"mostra les 10 primeres l\u00ednies dels fitxers que s'indiquin opcions: -n \u2192 mostra les n primeres l\u00ednies en lloc de les 10 primeres.","title":"head"},{"location":"unitats/ud3-info/comandaments/#tail","text":"mostra les 10 \u00faltimes l\u00ednies dels fitxers que se li indiquin opcions: -n \u2192 mostra les n darreres l\u00ednies -f \u2192 mostra les modificacions de el fitxer en temps real","title":"tail"},{"location":"unitats/ud3-info/comandaments/#more","text":"mostra el contingut dels fitxers per\u00f2 de forma paginada. A difer\u00e8ncia de la comanda cat, quan mostri el contingut de l'arxiu, si aquest ocupa m\u00e9s d'una pantalla, es quedar\u00e0 esperant que es premi una tecla. Si \u00e9s la barra d'espai, s'avan\u00e7ar\u00e0 una p\u00e0gina, i si \u00e9s la tecla enter, s'avan\u00e7ar\u00e0 una l\u00ednia. Amb la tecla q finalitzar\u00e0 l'execuci\u00f3.","title":"more"},{"location":"unitats/ud3-info/comandaments/#less","text":"mostra el contingut dels fitxers de la mateixa manera que more, amb la difer\u00e8ncia que podem moure'ns per ells utilitzant les tecles de cursor.","title":"less"},{"location":"unitats/ud3-info/comandaments/#filtres-i-readrecaments","text":"","title":"Filtres i readre\u00e7aments:"},{"location":"unitats/ud3-info/comandaments/#sort","text":"La comanda sort ordena les l\u00ednies d'un fitxer mostrant per la sortida est\u00e0ndard. De no especificar-un fitxer pren l'entrada est\u00e0ndard. Sintaxi: sort [opcions] [fitxer] Algunes opcions: -r: ordena a l'inrev\u00e9s. -f: tracta les maj\u00fascules i min\u00fascules per igual. -g: ordena de forma num\u00e8rica, de manera que no cal que els n\u00fameros es omplin amb zeros per l'esquerra. Exemple: $sort -f /etc/passwd","title":"sort"},{"location":"unitats/ud3-info/comandaments/#ln","text":"crea un enlla\u00e7 a el fitxer o directori que se li especifiqui. Si \u00e9s a un directori, l'enlla\u00e7 ser\u00e0 simb\u00f2lic. opcions: -s \u2192 crea un enlla\u00e7 simb\u00f2lic en comptes de dur -t \u2192 especifica el directori on es crearan els enlla\u00e7os","title":"ln"},{"location":"unitats/ud3-info/comandaments/#cut","text":"mostra nom\u00e9s certes l\u00ednies dels fitxers que se li passin com a argument. opcions: -b \u2192 mostra nom\u00e9s els bytes que se li especifiquin -c \u2192 mostra nom\u00e9s els car\u00e0cters que se li especifiquin -d \u2192 fa servir el car\u00e0cter que se li especifiqui com a delimitador en comptes del tabulador -f \u2192 mostra nom\u00e9s els camps que se li indiquin a la llista. Pot ser un camp, una s\u00e8rie de camps separats per comes o un rang. -s \u2192 no mostra les l\u00ednies que no continguin el delimitador --output-delimiter = cadena \u2192 fa servir la cadena com a delimitador de sortida en comptes del delimitador d'entrada.","title":"cut"},{"location":"unitats/ud3-info/comandaments/#grep","text":"mostra les l\u00ednies d'un fitxer que coincideixen amb un patr\u00f3 especificat. opcions: -r \u2192 -R \u2192 per buscar de forma recursiva dins dels fitxers d'un directori -n \u2192 mostra el nombre corresponent de la l\u00ednia en qu\u00e8 es troba el patr\u00f3 -i \u2192 no distingeix entre maj\u00fascules i min\u00fascules -v \u2192 mostra les l\u00ednies que no es corresponen amb el patr\u00f3 -w \u2192 el patr\u00f3 ha d'apar\u00e8ixer com una paraula completa i no com una part d'una paraula -c \u2192 escriu el nombre de l\u00ednies que satisfan la condici\u00f3 -l \u2192 s'escriuen els noms dels fitxers que contenen l\u00ednies buscades patr\u00f3: *text* \u2192 l\u00ednies que continguin la cadena \"text\" ^text \u2192 l\u00ednies que comencin per \"text\" ^[^text] \u2192 l\u00ednies que no comencen per \"text\" *text \u2192 l\u00ednies que acabin per \"text\"","title":"grep"},{"location":"unitats/ud3-info/comandaments/#readrecaments","text":"< \u2192 redirecciona l'entrada est\u00e0ndard substituint-la per l'arxiu que s'indique. > \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. >> \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. 2> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. 2>> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior.","title":"readre\u00e7aments"},{"location":"unitats/ud3-info/comandaments/#filtres-o-canonades","text":"Les canonades o filtres s'utilitzen en una l\u00ednia d'ordres per a connectar la sortida est\u00e0ndard d'una ordre amb l'entrada est\u00e0ndard d'un altre. Per a aix\u00f2 s'utilitza el car\u00e0cter |.","title":"Filtres o canonades"},{"location":"unitats/ud3-info/comandaments/#comprimirdescomprimir","text":"","title":"Comprimir/descomprimir"},{"location":"unitats/ud3-info/comandaments/#comanda-gzip","text":"Si el que necessites \u00e9s comprimir nom\u00e9s un arxiu, nom\u00e9s cal escriure el seu nom despr\u00e9s de la comanda gzip. Si no et trobes en el mateix directori on estan ubicats els arxius, haur\u00e0s d'escriure tamb\u00e9 la ruta. Una cosa semblant al que fem en el seg\u00fcent exemple: gzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg\" (crearia un fitxer amb extensi\u00f3 .gz) Per a descomprimir-lo utilitzariem l\u2019ordre : gunzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg.gz\" Podem comprimir m\u00e9s d\u2019un arxiu a la vegada i crear\u00e0 3 fitxers nous comprimits: gzip arxiu1.txt arxiu2.txt arxiu3.txt","title":"Comanda gzip:"},{"location":"unitats/ud3-info/comandaments/#comanda-tar","text":"En realitat, l'ordre tar est\u00e0 pensat per crear un nou arxiu que actu\u00ef com a contenidor d'altres arxius, per\u00f2 no els comprimeix. Aix\u00ed, per exemple, podem crear un arxiu que contingui en el seu interior totes les imatges en format jpeg d'un directori, escrivint la seg\u00fcent ordre: tar -vcf ~/Imatges/wallpaper/imagenes.tar ~ /Imatges/wallpaper/*.jpeg ``` En el nostre exemple, hem utilitzat la mateixa ruta com a origen i com a destinaci\u00f3, perqu\u00e8 puguis veure a la finestra de l'explorador d'arxius del que est\u00e0 passant. No obstant aix\u00f2, tu pots fer servir les que prefereixis.En aquest cas, l'argument v ens permet obtenir detalls de l'funcionament de tar, l'argument c indica que volem crear un arxiu i l'argument f especifica el nom de l'arxiu contenidor (en aquest exemple, Im\u00e1genes.tar). A continuaci\u00f3, nom\u00e9s ens falta incloure els arxius que anem a emmagatzemar en el contenidor (en el nostre exemple, tots els que acabin en .jpeg). Comprovar el contingut d'un arxiu contenidor Un cop creat l'arxiu contenidor, podrem consultar el seu contingut canviant l'argument c per t. Aix\u00ed, per veure el contingut de l'arxiu anterior, escriurem el seg\u00fcent: tar -vtf imagenes.tar Hem dit a el principi que l'ordre tar, per si mateix, no comprimeix la informaci\u00f3 que guarda dins de l'arxiu contenidor. No obstant aix\u00f2, podem utilitzar l'argument z perqu\u00e8 la sortida de l'ordre tar s'envi\u00ef a la comanda gzip obtenint aix\u00ed un arxiu comprimit. Per comprovar-ho, tornem a la carpeta amb les imatges originals: tar -czvf imagenes.tar.gz *.jpeg A m\u00e9s, fins i tot podem triar enviar-los a bzip2, un altre comanda de compressi\u00f3 que aplica algoritmes diferents a gzip. Per aconseguir-ho, nom\u00e9s cal canviar l'argument z, que afeg\u00edem en l'exemple anterior, pel l'argument j. Per comptant, la comanda ens quedaria aix\u00ed: tar -cjvf imagenes.tar.bz2 *.jpeg ### Comanada unzip Per a descomprimir arxius comprimits amb zip, simplement utilitzarem: ```bash unzip arxiu.zip Algunes opcions interessants: -d \"carpeta\" per a descomprimir a esta carpeta1 -l per a llistar els arxius sense descomprimir","title":"Comanda tar:"},{"location":"unitats/ud3-info/comandaments/#comanada-zip","text":"Per a crear arxius comprimits amb zip utilitzarem aquesta ordre. zip -r arxiu.zip carpeta L'anterior ordre crear\u00e0 arxiu.zip amb tot el contingut de la carpeta.","title":"Comanada zip"},{"location":"unitats/ud3-info/comandaments/#busqueda-darxius","text":"","title":"Busqueda d'arxius"},{"location":"unitats/ud3-info/comandaments/#comanda-find","text":"Amb find podem buscar arxius a l'arbre de directoris a partir de la ruta que li indiquem. La seua sintaxi \u00e9s: find <directori d'inici> <opcions> <terme buscat> Opcions importants: -name busca un arxiu per nom. -iname buca un arxiu per nom sense difer\u00e8nciar entre maj\u00fascules i min\u00fascules. -not busca arxius que no complisquen amb el terme buscat. -delete al final de l'ordre elimina els arxius trobats. -type per a especificar un tipus d per a directories f per a arxius regulars -size b\u00fasqueda per tamany amb les seg\u00fcents unitats (amb els s\u00edmbols + i - indiquem tamany major a o menor a): -c -> B -k -> KB -M -> MG -G -> GB -b -> blocs (512B normalment) Exemples: find . -iname arxiu find . -not -name \"*.pdf\" find . -name \"*.bak\" -delete find / -type d -name \"carpeta*\" find / -size +5G","title":"Comanda find"},{"location":"unitats/ud3-info/comandaments/#comanada-locate","text":"Amb esta comanda tamb\u00e9 podem buscar arxius a la base de dades de Linux. Per\u00f2 en algunes distribucions no ve instal\u00b7lat per defecte: locate <opcions> <terme buscat> Opcions importants: - -i per a no distinguir entre maj\u00fascules i min\u00fascules - -q per a desactivar errors Exemples: locate -iq Arxiu","title":"Comanada locate"},{"location":"unitats/ud4-permisos/UD4_SOM/","text":"Administraci\u00f3 dels sistemes operatius, usuaris i grups Arrancada i parada del sistema. Sessions. De forma gen\u00e8rica, solem anomenar usuari a qualsevol persona que utilitza un ordinador. Per facilitar l'administraci\u00f3 de l'equip, el seu administrador ha de crear un compte d'usuari per a cada usuari que l'utilitzi. En fer-ho, cobrirem diversos objectius diferents: Sempre estar\u00e0 identificada la persona que ha fet servir l'ordinador en cada moment. De fet, n'hi haur\u00e0 prou amb consultar els logs del sistema per esbrinar quin compte d'usuari es trobava activa en un moment concret. Si cada compte \u00e9s usada per un \u00fanic usuari, tamb\u00e9 tindrem identificat a l'usuari. Podrem limitar les accions que pot dur a terme cada compte d'usuari (fer servir la impressora, connectar-se a Internet, etc.). Aix\u00ed, aconseguirem que uns usuaris tinguin permisos per fer certes tasques i altres no, augmentant el nivell de seguretat de la instal\u00b7laci\u00f3. En els sistemes operatius actuals, cada compte d'usuari est\u00e0 associada a un perfil. Aix\u00f2 significa que cada usuari tindr\u00e0 el seu propi fons d'escriptori, favorits d'Internet, una imatge personal per identificar la seva compte, resoluci\u00f3 de pantalla, documents personals, la seva pr\u00f2pia col\u00b7lecci\u00f3 d'imatges, m\u00fasica, v\u00eddeos, etc. Inici/tancament de sessi\u00f3: Quan conclou la c\u00e0rrega, la majoria dels sistemes operatius moderns, mostren una pantalla d'autenticaci\u00f3. En ella podem triar el compte d'usuari amb la qual treballarem i, a continuaci\u00f3, escriure la contrasenya corresponent. Com \u00e9s d'esperar, cada usuari nom\u00e9s ha de con\u00e8ixer la seva pr\u00f2pia contrasenya. Un cop l'h\u00e0gim escrit, podrem comen\u00e7ar a treballar amb el sistema operatiu. independentment que vulguem apagar l'equip o reiniciar-lo, comen\u00e7arem fent clic sobre el men\u00fa del sistema a la part superior dreta de la pantalla. En fer-ho, apareixer\u00e0 un men\u00fa emergent amb diferents opcions. Apagar l'equip des comandaments pot ser tan senzill com executar una ordre, \u00e9s clar que despr\u00e9s de pr\u00e9mer intro es tancar\u00e0 tot el que estiguis fent i ho apagar\u00e0 immediatament: shutdown -h now init 0 halt -p poweroff Si la nostra intenci\u00f3 \u00e9s programar l'apagat tenim aquesta entrada on potser el m\u00e9s interessant serien els seg\u00fcents dos comandaments: shutdown -h hours: minutes & \u2192 Apagat planificat de sistema shutdown -c \u2192 Cancel a una aturada planificada de sistema En certs moments tamb\u00e9 pot resultar interessant reiniciar l'ordinador mitjan\u00e7ant ordres, com no podia faltar tamb\u00e9 disposem de diverses opcions en linux per aconseguir aquest objectiu. shutdown -r now reboot init 6 Tamb\u00e9 podem programar el reinici, reiniciar en un temps programat: shutdown -r + 10 -> reiniciar\u00e0 en 10 minuts shutdown -r 14:30 -> reiniciar\u00e0 l'equip a les 14 i mitja La sessi\u00f3 d'un usuari tamb\u00e9 pot ser acabada sense necessitat d'apagar o reiniciar podent provocar p\u00e8rdues de dades en altres usuaris si estiguessin amb la seva sessi\u00f3 encara activa realitzant qualsevol operaci\u00f3. Tamb\u00e9 pot ser \u00fatil a l'hora de canviar manualment d'usuaris en una terminal ja sigui administrant, fent proves, usant aplicacions o el motiu que sigui. Alguns comandaments per tancar la sessi\u00f3 s\u00f3n: logout \u2192 Tancar sessi\u00f3 skill nom_d'usuari \u2192 Tancar sessi\u00f3 exit \u2192 Sortir de l'int\u00e8rpret d'ordres (si nom\u00e9s n'hi ha un, equival a tancar sessi\u00f3, si des d'un int\u00e8rpret o usuari hem accedit a un altre int\u00e8rpret o loguejat amb un altre usuari ens tancar\u00e0 l'\u00faltim i tornar\u00e0 a l'anterior) Usuaris i grups A Linux, els usuaris s\u2019identifiquen amb un n\u00famero d\u2019usuari anomenat UID (User ID). Aquest n\u00famero \u00e9s diferent de qualsevol altre n\u00famero d'UID o d'un altre usuari. \u00c9s com el n\u00famero de la targeta d\u2019identificaci\u00f3. Aquest n\u00famero identifica una sola persona i no es pot tornar a utilitzar per a una altra persona. A m\u00e9s, cada usuari hauria de pert\u00e0nyer a un grup, anomenat grups primaris. A m\u00e9s, el mateix usuari pot pert\u00e0nyer a altres grups anomenats grups secundaris: El grup principal, en la majoria dels casos, t\u00e9 el mateix nom que el vostre nom d\u2019inici de sessi\u00f3. El grup primari s'utilitza per defecte quan es creen nous fitxers (o directoris), es modifiquen fitxers o s'executen ordres. Grups secundaris: es tracta de grups que sou membres fora del grup principal. Vol dir que, si algun usuari pertany a un grup com a secundari, aquest usuari aplicar\u00e0 el mateix (perm\u00eds o accessibilitat) aplicat al grup del directori o del fitxer. Un grup \u00e9s un conjunt d\u2019usuaris, per\u00f2 \u00e9s possible que un grup tingui un sol usuari. De la mateixa manera que l\u2019usuari t\u00e9 un n\u00famero d\u2019UID, els grups s\u2019identifiquen mitjan\u00e7ant GID (Group ID). Com heu pogut endevinar, \u00e9s un n\u00famero diferent per a cada grup. Tipus d\u2019usuaris: Hi ha tres tipus d'usuaris diferents en el sistema Linux: Usuari root: tamb\u00e9 conegut com a superusuari o administrador. \u00c9s l\u2019usuari que t\u00e9 tots els privilegis i pot fer gaireb\u00e9 tot. T\u00e9 acc\u00e9s total al sistema, i s\u2019encarrega de l\u2019administraci\u00f3, actualitzaci\u00f3 i manteniment; El seu n\u00famero de UID \u00e9s 0. Usuaris del sistema: es generen quan s\u2019instal\u00b7len els sistemes operatius o quan s\u2019instal\u00b7la algun servei. Tot i que no tenen tots els privilegis, en tenen alguns depenent de l\u2019usuari. No s\u2019utilitzen per validar en una sessi\u00f3, per\u00f2 s\u00f3n necessaris per executar alguns serveis o processos del sistema operatiu. El nombre d'UID \u00e9s superior a 1 i inferior a 1000, excepte els usuaris nobody. L\u2019UID d\u2019aquest usuari \u00e9s 65534, que \u00e9s l\u2019\u00faltim. Usuaris habituals: s\u00f3n usuaris normals que es connectaran al sistema i poden iniciar una sessi\u00f3 en el sistema operatiu. Tenen un directori de treball al directori /home. Tenen tot el perm\u00eds d\u2019aquest directori. La UID assignada a aquest tipus d\u2019usuaris \u00e9s superior o igual a 1000, tot i que \u00e9s possible canviar-la. Quan s\u2019instal\u00b7la el sistema operatiu, per defecte es crea un d\u2019aquest tipus d\u2019usuaris. Un usuari habitual pot d\u2019accedir als fitxers de la seva propietat o als directoris i fitxers en els quals algu li ha donat permissos Fitxers de configuraci\u00f3: Els fitxers de configuraci\u00f3 de l'administraci\u00f3 del sistema s\u00f3n els fitxers que el sistema llegeix o modifica quan es gestionen usuaris o grups. /etc/passwd: cont\u00e9 informaci\u00f3 sobre l\u2019usuari en cadascuna de les seves l\u00ednies. La informaci\u00f3 s\u2019organitza en camps. El delimitador de cada camp \u00e9s el car\u00e0cter \u201c:\u201d. L'estructura de cada l\u00ednia \u00e9s la seg\u00fcent informaci\u00f3: nom d\u2019usuari: \u00e9s l\u2019inici de sessi\u00f3 de l\u2019usuari d\u2019aquesta l\u00ednia. \u00c9s el primer camp. contrasenya: Aquest camp \u00e9s la contrasenya de l\u2019usuari, per\u00f2 la soluci\u00f3 significa que la contrasenya est\u00e0 xifrada al fitxer /etc/shadow. UID: \u00e9s el n\u00famero UID de l\u2019usuari GID: \u00e9s el n\u00famero GID del grup principal de l\u2019usuari. Aquest nombre \u00e9s igual o superior a 0. El nombre 0 \u00e9s el grup de n\u00fameros GID arrel. Informaci\u00f3 de l\u2019usuari: camp que cont\u00e9 informaci\u00f3 sobre l\u2019usuari. El delimitador de la informaci\u00f3 \u00e9s \u201c,\u201d per\u00f2 \u00e9s possible que el camp estigui buit. Aquest camp s\u2019anomena GECOS. Directori principal de l'usuari: \u00e9s el cam\u00ed absolut del directori personal de l'usuari (directori personal del home) Command/Shell: \u00e9s la ruta absoluta del shell d\u2019inici de sessi\u00f3 que l\u2019usuari utilitza per defecte. El m\u00e9s utilitzat \u00e9s el shell bash, tot i que n\u2019hi ha molts. /etc/shadow: Aquest fitxer cont\u00e9 les contrasenyes xifrades de cada usuari. \u00c9s un fitxer molt important i sensible. Per tant, root o un altre usuari amb els mateixos privilegis poden llegir-lo. Cada vegada que algun usuari accedeix al sistema, Linux comprova la contrasenya d'aquest fitxer. Fa uns anys, es va utilitzar la contrasenya xifrada per desar-la a la paraula de pas del camp del fitxer /etc/passwd. Aquesta contrasenya es va xifrar amb l'algorisme de xifrat (Data Encryption Standard). Aquest algorisme utilitza la funci\u00f3 de cripta Linux. A causa de raons de seguretat, va comen\u00e7ar a utilitzar aquest fitxer (/etc/shadow) i encriptaci\u00f3 d'algorismes m\u00e9s complexos. Els algorismes m\u00e9s utilitzats s\u00f3n: DES, MD-5, SHA-256 i SHA-512, Blowfish. L\u2019estructura del fitxer \u00e9s: Nom d'usuari: \u00e9s el vostre nom d'inici de sessi\u00f3. Contrasenya: contrasenya xifrada de cada usuari. Contrasenya canviada: Dies des de l\u20191 de gener de 1970 fins quan es va canviar per \u00faltima vegada la contrasenya. M\u00ednim: el nombre m\u00ednim de dies requerits entre canvis de contrasenya, \u00e9s a dir, el nombre de dies restants abans que l'usuari permeti canviar la seva contrasenya. M\u00e0xim: el nombre m\u00e0xim de dies que la contrasenya \u00e9s v\u00e0lida (despr\u00e9s que l'usuari sigui obligat a canviar la seva contrasenya) Av\u00eds: el nombre de dies abans de caducar la contrasenya, se li advertir\u00e0 a l'usuari que cal canviar la seva contrasenya Inactiu: el nombre de dies posteriors a la caducitat de la contrasenya del compte desactivat. Caduca: dies des de l'1 de gener de 1970, el compte est\u00e0 desactivat, \u00e9s a dir, una data absoluta que especifica quan ja no es podr\u00e0 utilitzar la sessi\u00f3. Si aquest camp est\u00e0 buit, el compte no caduca mai. /etc/group: fitxer que cont\u00e9 els grups registrats al sistema. L\u2019estructura si el fitxer \u00e9s: grup: x: GID: usuaris: on cada camp cont\u00e9 la informaci\u00f3 seg\u00fcent: Grup: \u00e9s el nom del grup. X: s'utilitza principalment al sistema Unix per desar la contrasenya del grup. Avui en dia, no s\u2019utilitza excepte en alguns casos, com protegir alguns grups per evitar que algun usuari pugui accedir. GID: \u00e9s el nombre del grup. Usuaris: \u00e9s la llista d\u2019usuaris amb aix\u00f2 com a grup secundari. Es delimitar\u00e0 cada usuari. Per con\u00e8ixer el grup principal de cada usuari, cal que comproveu el fitxer /etc/passwd. /etc/gshadow: \u00e9s el fitxer que es guarden les contrasenyes de grup. Tot i que les contrasenyes no s'utilitzen, \u00e9s necessari tenir el fitxer. /etc/default/useradd: en aquest fitxer \u00e9s possible trobar els valors per defecte per afegir algun usuari amb la comanda useradd. /etc/adduser.conf: cont\u00e9 els valors per defecte per tal que l\u2019usuari s\u2019afegeixi al sistema amb l\u2019ordre adduser. /etc/deluser.conf: cont\u00e9 els valors per defecte quan un usuari s'esborra amb l'ordre delimitat. /etc/login.defs: fitxer que cont\u00e9 informaci\u00f3 amb alguns valors sobre el xifrat de la contrasenya i altres par\u00e0metres de la creaci\u00f3 de l'usuari. /etc/shells: \u00e9s una llista dels shells v\u00e0lids. Usuaris i gesti\u00f3 de grups: Comandes per canviar l\u2019usuari o executar comandes amb privilegis d\u2019administrador: Durant la instal\u00b7laci\u00f3 de Linux (distribucions Ubuntu o Mint), es crea un usuari, aquest usuari no \u00e9s root, per\u00f2 es troba a la llista anomenada sudoers . En aquesta llista \u00e9s possible donar privilegis a usuaris habituals, i l\u2019usuari creat durant la instal\u00b7laci\u00f3 n\u2019\u00e9s un. D\u2019aquesta manera \u00e9s possible executar alguna instrucci\u00f3 com si l\u2019executara root. D\u2019altra banda, el compte root est\u00e0 desactivat, \u00e9s a dir, no \u00e9s possible iniciar la sessi\u00f3 com a root, tret que l\u2019usuari tingui una contrasenya a l\u2019arrel de root amb privilegis. Per tant, per executar ordres amb privilegis, \u00e9s obligatori utilitzar la comanda sudo abans de la comanda. Exemple: Anem a canvair la contrasenya de root per activar-lo. D\u2019aquesta manera l\u2019ordre de contrasenya (ordre per canviar la contrasenya) s\u2019executa de forma superusuari per part de l\u2019usuari connectat al sistema. Es suposa que l'usuari que ha iniciat la sessi\u00f3 es troba a la llista de sudoers ( sino fos aix\u00ed no podria executar la comanda). ubuntu@ubuntuSOM:~$ sudo passwd root [sudo] contrase\u00f1a para ubuntu: Introduzca la nueva contrase\u00f1a de UNIX: Vuelva a escribir la nueva contrase\u00f1a de UNIX: passwd: contrase\u00f1a actualizada correctamente D\u2019altra banda, l\u2019ordre per canviar l\u2019usuari \u00e9s su. El comandament su \u00e9s una sigla d\u2019Usuari Switch. Tenim dues opcions: Sense par\u00e0metres: en aquest cas, intenta iniciar la sessi\u00f3 com a root. Funciona fins i tot si el compte root est\u00e0 desactivat. Amb par\u00e0metre: t\u00e9 un par\u00e0metre que \u00e9s el nom d'usuari al qual voleu iniciar la sessi\u00f3. Si executeu la comanda com a root, us registrar\u00e0 autom\u00e0ticament com a usuari. Si ets un usuari normal, et demana la contrasenya de l\u2019usuari. ubuntu@ubuntuSOM:~$ su root Contrase\u00f1a: root@ubuntuSOM:/home/ubuntu# Comandes de gesti\u00f3 d\u2019usuaris i grups: adduser \u21d2 Afegir usuaris al sistema. Tamb\u00e9 s'utilitza per afegir algun usuari a un grup existent. Sintaxi: adduser [opcions] usuari adduser [opcions] grup d\u2019usuaris Opcions: --grupo namegroup \u21d2 L'usuari es crear\u00e0 amb el grup primari especificat. --gid num_gid \u21d2 \u00c9s la mateixa opci\u00f3 que abans, per\u00f2 aquesta vegada s'utilitza el n\u00famero GID en lloc del grup de nom. --home nom del directori home \u21d2 per canviar el directori inicial de l'usuari en lloc del no predeterminat. Normalment \u00e9s el nom /home/nom_usuari. useradd \u21d2 que la comanda fa el mateix tot i que s'ha d'indicar la contrasenya, si no que s'utilitza un signe d'exclamaci\u00f3 (!) I s'afegeix al fitxer /etc/shadow. Aix\u00f2 vol dir que l\u2019usuari est\u00e0 en estat bloquejat; per tant, \u00e9s necessari establir una contrasenya per a aquest compte amb l'ordre passwd. I el mateix amb el directori personal; \u00e9s necessari crear un directori personal. \u00c9s possible crear-lo amb les opcions de comandament. Sintaxi: useradd [opcions] usuari Opcions: -c Descripci\u00f3n del usuario -d Directori home (no el crea, deu existir) -e data de caducitat del compte -g Grup per defecte (no el crea, deu existir) -G Altress grups als quals pertanyer\u00e0 a part del principal -s Shell que utilitzar\u00e0 (/bin/bash) -u Identificador de l\u2019usuari (ID) -m Crea el directori home asignat a l\u2019opci\u00f3 -d Exemple: useradd -c \u201cName Surname \u201d -g admin -d /home/user1 -m -s /bin/bash user1 Crea un usuari que pertany al grup admin, com a home tindr\u00e0 /home/user1 i el shell per defecte ser\u00e0 /bin/bash. deluser \u21d2 per esborrar un usuari. Existeix l'ordre userdel. Tingueu en compte que no \u00e9s possible esborrar un usuari connectat en aquell moment. Sintaxi: deluser [opcions] user. Opcions: -remove-home \u21d2 esborra el directori personal de l\u2019usuari (amb el comandament userdel l\u2019opci\u00f3 que fa el mateix seria -r) -remove-all-files \u21d2 S'eliminaran tots els fitxers que pertanyen a l'usuari i el directori personal. addgroup \u21d2 que l\u2019ordre afegeix un grup al sistema. El mateix resultat s\u2019obtindria amb l\u2019adduser d\u2019ordres i l\u2019opci\u00f3 --group: Sintaxi: addgroup [\u2013group] [-g gid] grupo ``` delgroup \u21d2 Eliminar un grup. El mateix resultat s\u2019obtindria amb el comandant deluser -g grupo. Tingueu en compte que el grup que se suposa que se suprimeix, no hauria de ser un grup principal de cap usuari. Sintaxi: delgroup grupo usermod \u21d2 comanda que modifica un usuari existent. Sintaxi: usermod [opcions] usuari Opcions: * -d directori [-m] \u21d2 canviar el directori personal * -m \u21d2 despla\u00e7a el contingut de l'antic directori personal al directori nou. Es pot utilitzar nom\u00e9s amb l'opci\u00f3 -d. * -g grup \u21d2cambieu el grup principal de l\u2019usuari. * -u uid \u21d2 canvia el n\u00famero de uid de l'usuari. * -l nom \u21d2 canvia el nom de l\u2019usuari. * -s shell \u21d2 canvia el shell groupmod \u21d2 per modificar un grup existent Sintaxi: groupmod [opcions] grup Opcions: * -n nom directori [-m] \u21d2 canviar el grup de nom. * -g gid \u21d2cambieu el GID del grup gpasswd \u21d2 s'utilitza per afegir o eliminar un usuari a algun grup. Sintaxi: gpasswd [opcions] grup usuri gpasswd grup Opcions: * -a \u21d2 afegir usuari al grup * -d \u21d2 eliminar usuaris del grup. * -M \u21d2 afegeix diversos usuaris al grup. Id \u21d2 mostra la informaci\u00f3 de l'usuari; per exemple, UID, nom, grups als quals pertany i GID. Sintaxi: id [opcions] [usuaris] Opcions: * -u \u21d2 - -user \u21d2 nom\u00e9s mostra el UID de l'usuari. * -n \u21d2 - -name\u21d2 mostra nom\u00e9s el nom de l'usuari en lloc dels grups UID group\u21d2 mostra el nom dels grups als quals pertany l'usuari. Sintaxi: group[usuari] finger \u21d2 Mostra la informaci\u00f3 sobre l'usuari especificat. Sense cap usuari especificat, mostra informaci\u00f3 sobre els usuaris connectats. Sintaxi: finger [usuari] Alguns exemples: 1. Creeu un grup nou, anomenat grup nou. sudo addgroup newgroup 2. A continuaci\u00f3, afegiu un usuari anomenat nou usuari. sudo adduser --ingroup newgroup newuser 3. El grup primari \u00e9s grup nou. id newuser 4. Comproveu el resultat. su newuser (fem login amb l\u2019usuari nou) whoami exit 5. Creeu un altre grup anomenat grup2. sudo adduser --group group2 6. Afegiu nou usuari a aquest grup com a grup secundari sudo adduser newuser group2 7. Comproveu el resultat cat /etc/group (fem la comprovaci\u00f3) groups newuser su newuser exit Borrem el que hem fet. sudo deluser --remove-home newuser sudo delgroup group2 sudo deluser --group newgroup ### Ordres per canviar fitxers i directoris d\u2019usuaris i grups. Com sabem, cada fitxer i directori t\u00e9 un propietari i un grup. Per tant, s'utilitzen les ordres seg\u00fcents per canviar el propietari o grup de directoris i fitxers. chown \u21d2 Canvia el propietari del fitxer. \u00c9s possible utilitzar-lo per canviar de grup tamb\u00e9. Sintaxi: chown [options] [owner[:grupo]] file/s Opcions: * -r - -recursivament, cambia propietari i grup dels directoris i fitxers que estan dins del principal. chgrp \u21d2 canviar el propietari del grup del fitxer. Sintaxi: chgrp [opcions] fitxer ``` Opcions: -r - -recursive \u21d2 canviar el propietari del grup per un arbre de directoris.","title":"Teoria"},{"location":"unitats/ud4-permisos/UD4_SOM/#administracio-dels-sistemes-operatius-usuaris-i-grups","text":"","title":"Administraci\u00f3 dels sistemes operatius, usuaris i grups"},{"location":"unitats/ud4-permisos/UD4_SOM/#arrancada-i-parada-del-sistema-sessions","text":"De forma gen\u00e8rica, solem anomenar usuari a qualsevol persona que utilitza un ordinador. Per facilitar l'administraci\u00f3 de l'equip, el seu administrador ha de crear un compte d'usuari per a cada usuari que l'utilitzi. En fer-ho, cobrirem diversos objectius diferents: Sempre estar\u00e0 identificada la persona que ha fet servir l'ordinador en cada moment. De fet, n'hi haur\u00e0 prou amb consultar els logs del sistema per esbrinar quin compte d'usuari es trobava activa en un moment concret. Si cada compte \u00e9s usada per un \u00fanic usuari, tamb\u00e9 tindrem identificat a l'usuari. Podrem limitar les accions que pot dur a terme cada compte d'usuari (fer servir la impressora, connectar-se a Internet, etc.). Aix\u00ed, aconseguirem que uns usuaris tinguin permisos per fer certes tasques i altres no, augmentant el nivell de seguretat de la instal\u00b7laci\u00f3. En els sistemes operatius actuals, cada compte d'usuari est\u00e0 associada a un perfil. Aix\u00f2 significa que cada usuari tindr\u00e0 el seu propi fons d'escriptori, favorits d'Internet, una imatge personal per identificar la seva compte, resoluci\u00f3 de pantalla, documents personals, la seva pr\u00f2pia col\u00b7lecci\u00f3 d'imatges, m\u00fasica, v\u00eddeos, etc.","title":"Arrancada i parada del sistema. Sessions."},{"location":"unitats/ud4-permisos/UD4_SOM/#inicitancament-de-sessio","text":"Quan conclou la c\u00e0rrega, la majoria dels sistemes operatius moderns, mostren una pantalla d'autenticaci\u00f3. En ella podem triar el compte d'usuari amb la qual treballarem i, a continuaci\u00f3, escriure la contrasenya corresponent. Com \u00e9s d'esperar, cada usuari nom\u00e9s ha de con\u00e8ixer la seva pr\u00f2pia contrasenya. Un cop l'h\u00e0gim escrit, podrem comen\u00e7ar a treballar amb el sistema operatiu. independentment que vulguem apagar l'equip o reiniciar-lo, comen\u00e7arem fent clic sobre el men\u00fa del sistema a la part superior dreta de la pantalla. En fer-ho, apareixer\u00e0 un men\u00fa emergent amb diferents opcions. Apagar l'equip des comandaments pot ser tan senzill com executar una ordre, \u00e9s clar que despr\u00e9s de pr\u00e9mer intro es tancar\u00e0 tot el que estiguis fent i ho apagar\u00e0 immediatament: shutdown -h now init 0 halt -p poweroff Si la nostra intenci\u00f3 \u00e9s programar l'apagat tenim aquesta entrada on potser el m\u00e9s interessant serien els seg\u00fcents dos comandaments: shutdown -h hours: minutes & \u2192 Apagat planificat de sistema shutdown -c \u2192 Cancel a una aturada planificada de sistema En certs moments tamb\u00e9 pot resultar interessant reiniciar l'ordinador mitjan\u00e7ant ordres, com no podia faltar tamb\u00e9 disposem de diverses opcions en linux per aconseguir aquest objectiu. shutdown -r now reboot init 6 Tamb\u00e9 podem programar el reinici, reiniciar en un temps programat: shutdown -r + 10 -> reiniciar\u00e0 en 10 minuts shutdown -r 14:30 -> reiniciar\u00e0 l'equip a les 14 i mitja La sessi\u00f3 d'un usuari tamb\u00e9 pot ser acabada sense necessitat d'apagar o reiniciar podent provocar p\u00e8rdues de dades en altres usuaris si estiguessin amb la seva sessi\u00f3 encara activa realitzant qualsevol operaci\u00f3. Tamb\u00e9 pot ser \u00fatil a l'hora de canviar manualment d'usuaris en una terminal ja sigui administrant, fent proves, usant aplicacions o el motiu que sigui. Alguns comandaments per tancar la sessi\u00f3 s\u00f3n: logout \u2192 Tancar sessi\u00f3 skill nom_d'usuari \u2192 Tancar sessi\u00f3 exit \u2192 Sortir de l'int\u00e8rpret d'ordres (si nom\u00e9s n'hi ha un, equival a tancar sessi\u00f3, si des d'un int\u00e8rpret o usuari hem accedit a un altre int\u00e8rpret o loguejat amb un altre usuari ens tancar\u00e0 l'\u00faltim i tornar\u00e0 a l'anterior)","title":"Inici/tancament de sessi\u00f3:"},{"location":"unitats/ud4-permisos/UD4_SOM/#usuaris-i-grups","text":"A Linux, els usuaris s\u2019identifiquen amb un n\u00famero d\u2019usuari anomenat UID (User ID). Aquest n\u00famero \u00e9s diferent de qualsevol altre n\u00famero d'UID o d'un altre usuari. \u00c9s com el n\u00famero de la targeta d\u2019identificaci\u00f3. Aquest n\u00famero identifica una sola persona i no es pot tornar a utilitzar per a una altra persona. A m\u00e9s, cada usuari hauria de pert\u00e0nyer a un grup, anomenat grups primaris. A m\u00e9s, el mateix usuari pot pert\u00e0nyer a altres grups anomenats grups secundaris: El grup principal, en la majoria dels casos, t\u00e9 el mateix nom que el vostre nom d\u2019inici de sessi\u00f3. El grup primari s'utilitza per defecte quan es creen nous fitxers (o directoris), es modifiquen fitxers o s'executen ordres. Grups secundaris: es tracta de grups que sou membres fora del grup principal. Vol dir que, si algun usuari pertany a un grup com a secundari, aquest usuari aplicar\u00e0 el mateix (perm\u00eds o accessibilitat) aplicat al grup del directori o del fitxer. Un grup \u00e9s un conjunt d\u2019usuaris, per\u00f2 \u00e9s possible que un grup tingui un sol usuari. De la mateixa manera que l\u2019usuari t\u00e9 un n\u00famero d\u2019UID, els grups s\u2019identifiquen mitjan\u00e7ant GID (Group ID). Com heu pogut endevinar, \u00e9s un n\u00famero diferent per a cada grup.","title":"Usuaris i grups"},{"location":"unitats/ud4-permisos/UD4_SOM/#tipus-dusuaris","text":"Hi ha tres tipus d'usuaris diferents en el sistema Linux: Usuari root: tamb\u00e9 conegut com a superusuari o administrador. \u00c9s l\u2019usuari que t\u00e9 tots els privilegis i pot fer gaireb\u00e9 tot. T\u00e9 acc\u00e9s total al sistema, i s\u2019encarrega de l\u2019administraci\u00f3, actualitzaci\u00f3 i manteniment; El seu n\u00famero de UID \u00e9s 0. Usuaris del sistema: es generen quan s\u2019instal\u00b7len els sistemes operatius o quan s\u2019instal\u00b7la algun servei. Tot i que no tenen tots els privilegis, en tenen alguns depenent de l\u2019usuari. No s\u2019utilitzen per validar en una sessi\u00f3, per\u00f2 s\u00f3n necessaris per executar alguns serveis o processos del sistema operatiu. El nombre d'UID \u00e9s superior a 1 i inferior a 1000, excepte els usuaris nobody. L\u2019UID d\u2019aquest usuari \u00e9s 65534, que \u00e9s l\u2019\u00faltim. Usuaris habituals: s\u00f3n usuaris normals que es connectaran al sistema i poden iniciar una sessi\u00f3 en el sistema operatiu. Tenen un directori de treball al directori /home. Tenen tot el perm\u00eds d\u2019aquest directori. La UID assignada a aquest tipus d\u2019usuaris \u00e9s superior o igual a 1000, tot i que \u00e9s possible canviar-la. Quan s\u2019instal\u00b7la el sistema operatiu, per defecte es crea un d\u2019aquest tipus d\u2019usuaris. Un usuari habitual pot d\u2019accedir als fitxers de la seva propietat o als directoris i fitxers en els quals algu li ha donat permissos","title":"Tipus d\u2019usuaris:"},{"location":"unitats/ud4-permisos/UD4_SOM/#fitxers-de-configuracio","text":"Els fitxers de configuraci\u00f3 de l'administraci\u00f3 del sistema s\u00f3n els fitxers que el sistema llegeix o modifica quan es gestionen usuaris o grups. /etc/passwd: cont\u00e9 informaci\u00f3 sobre l\u2019usuari en cadascuna de les seves l\u00ednies. La informaci\u00f3 s\u2019organitza en camps. El delimitador de cada camp \u00e9s el car\u00e0cter \u201c:\u201d. L'estructura de cada l\u00ednia \u00e9s la seg\u00fcent informaci\u00f3: nom d\u2019usuari: \u00e9s l\u2019inici de sessi\u00f3 de l\u2019usuari d\u2019aquesta l\u00ednia. \u00c9s el primer camp. contrasenya: Aquest camp \u00e9s la contrasenya de l\u2019usuari, per\u00f2 la soluci\u00f3 significa que la contrasenya est\u00e0 xifrada al fitxer /etc/shadow. UID: \u00e9s el n\u00famero UID de l\u2019usuari GID: \u00e9s el n\u00famero GID del grup principal de l\u2019usuari. Aquest nombre \u00e9s igual o superior a 0. El nombre 0 \u00e9s el grup de n\u00fameros GID arrel. Informaci\u00f3 de l\u2019usuari: camp que cont\u00e9 informaci\u00f3 sobre l\u2019usuari. El delimitador de la informaci\u00f3 \u00e9s \u201c,\u201d per\u00f2 \u00e9s possible que el camp estigui buit. Aquest camp s\u2019anomena GECOS. Directori principal de l'usuari: \u00e9s el cam\u00ed absolut del directori personal de l'usuari (directori personal del home) Command/Shell: \u00e9s la ruta absoluta del shell d\u2019inici de sessi\u00f3 que l\u2019usuari utilitza per defecte. El m\u00e9s utilitzat \u00e9s el shell bash, tot i que n\u2019hi ha molts. /etc/shadow: Aquest fitxer cont\u00e9 les contrasenyes xifrades de cada usuari. \u00c9s un fitxer molt important i sensible. Per tant, root o un altre usuari amb els mateixos privilegis poden llegir-lo. Cada vegada que algun usuari accedeix al sistema, Linux comprova la contrasenya d'aquest fitxer. Fa uns anys, es va utilitzar la contrasenya xifrada per desar-la a la paraula de pas del camp del fitxer /etc/passwd. Aquesta contrasenya es va xifrar amb l'algorisme de xifrat (Data Encryption Standard). Aquest algorisme utilitza la funci\u00f3 de cripta Linux. A causa de raons de seguretat, va comen\u00e7ar a utilitzar aquest fitxer (/etc/shadow) i encriptaci\u00f3 d'algorismes m\u00e9s complexos. Els algorismes m\u00e9s utilitzats s\u00f3n: DES, MD-5, SHA-256 i SHA-512, Blowfish. L\u2019estructura del fitxer \u00e9s: Nom d'usuari: \u00e9s el vostre nom d'inici de sessi\u00f3. Contrasenya: contrasenya xifrada de cada usuari. Contrasenya canviada: Dies des de l\u20191 de gener de 1970 fins quan es va canviar per \u00faltima vegada la contrasenya. M\u00ednim: el nombre m\u00ednim de dies requerits entre canvis de contrasenya, \u00e9s a dir, el nombre de dies restants abans que l'usuari permeti canviar la seva contrasenya. M\u00e0xim: el nombre m\u00e0xim de dies que la contrasenya \u00e9s v\u00e0lida (despr\u00e9s que l'usuari sigui obligat a canviar la seva contrasenya) Av\u00eds: el nombre de dies abans de caducar la contrasenya, se li advertir\u00e0 a l'usuari que cal canviar la seva contrasenya Inactiu: el nombre de dies posteriors a la caducitat de la contrasenya del compte desactivat. Caduca: dies des de l'1 de gener de 1970, el compte est\u00e0 desactivat, \u00e9s a dir, una data absoluta que especifica quan ja no es podr\u00e0 utilitzar la sessi\u00f3. Si aquest camp est\u00e0 buit, el compte no caduca mai. /etc/group: fitxer que cont\u00e9 els grups registrats al sistema. L\u2019estructura si el fitxer \u00e9s: grup: x: GID: usuaris: on cada camp cont\u00e9 la informaci\u00f3 seg\u00fcent: Grup: \u00e9s el nom del grup. X: s'utilitza principalment al sistema Unix per desar la contrasenya del grup. Avui en dia, no s\u2019utilitza excepte en alguns casos, com protegir alguns grups per evitar que algun usuari pugui accedir. GID: \u00e9s el nombre del grup. Usuaris: \u00e9s la llista d\u2019usuaris amb aix\u00f2 com a grup secundari. Es delimitar\u00e0 cada usuari. Per con\u00e8ixer el grup principal de cada usuari, cal que comproveu el fitxer /etc/passwd. /etc/gshadow: \u00e9s el fitxer que es guarden les contrasenyes de grup. Tot i que les contrasenyes no s'utilitzen, \u00e9s necessari tenir el fitxer. /etc/default/useradd: en aquest fitxer \u00e9s possible trobar els valors per defecte per afegir algun usuari amb la comanda useradd. /etc/adduser.conf: cont\u00e9 els valors per defecte per tal que l\u2019usuari s\u2019afegeixi al sistema amb l\u2019ordre adduser. /etc/deluser.conf: cont\u00e9 els valors per defecte quan un usuari s'esborra amb l'ordre delimitat. /etc/login.defs: fitxer que cont\u00e9 informaci\u00f3 amb alguns valors sobre el xifrat de la contrasenya i altres par\u00e0metres de la creaci\u00f3 de l'usuari. /etc/shells: \u00e9s una llista dels shells v\u00e0lids.","title":"Fitxers de configuraci\u00f3:"},{"location":"unitats/ud4-permisos/UD4_SOM/#usuaris-i-gestio-de-grups","text":"","title":"Usuaris i gesti\u00f3 de grups:"},{"location":"unitats/ud4-permisos/UD4_SOM/#comandes-per-canviar-lusuari-o-executar-comandes-amb-privilegis-dadministrador","text":"Durant la instal\u00b7laci\u00f3 de Linux (distribucions Ubuntu o Mint), es crea un usuari, aquest usuari no \u00e9s root, per\u00f2 es troba a la llista anomenada sudoers . En aquesta llista \u00e9s possible donar privilegis a usuaris habituals, i l\u2019usuari creat durant la instal\u00b7laci\u00f3 n\u2019\u00e9s un. D\u2019aquesta manera \u00e9s possible executar alguna instrucci\u00f3 com si l\u2019executara root. D\u2019altra banda, el compte root est\u00e0 desactivat, \u00e9s a dir, no \u00e9s possible iniciar la sessi\u00f3 com a root, tret que l\u2019usuari tingui una contrasenya a l\u2019arrel de root amb privilegis. Per tant, per executar ordres amb privilegis, \u00e9s obligatori utilitzar la comanda sudo abans de la comanda. Exemple: Anem a canvair la contrasenya de root per activar-lo. D\u2019aquesta manera l\u2019ordre de contrasenya (ordre per canviar la contrasenya) s\u2019executa de forma superusuari per part de l\u2019usuari connectat al sistema. Es suposa que l'usuari que ha iniciat la sessi\u00f3 es troba a la llista de sudoers ( sino fos aix\u00ed no podria executar la comanda). ubuntu@ubuntuSOM:~$ sudo passwd root [sudo] contrase\u00f1a para ubuntu: Introduzca la nueva contrase\u00f1a de UNIX: Vuelva a escribir la nueva contrase\u00f1a de UNIX: passwd: contrase\u00f1a actualizada correctamente D\u2019altra banda, l\u2019ordre per canviar l\u2019usuari \u00e9s su. El comandament su \u00e9s una sigla d\u2019Usuari Switch. Tenim dues opcions: Sense par\u00e0metres: en aquest cas, intenta iniciar la sessi\u00f3 com a root. Funciona fins i tot si el compte root est\u00e0 desactivat. Amb par\u00e0metre: t\u00e9 un par\u00e0metre que \u00e9s el nom d'usuari al qual voleu iniciar la sessi\u00f3. Si executeu la comanda com a root, us registrar\u00e0 autom\u00e0ticament com a usuari. Si ets un usuari normal, et demana la contrasenya de l\u2019usuari. ubuntu@ubuntuSOM:~$ su root Contrase\u00f1a: root@ubuntuSOM:/home/ubuntu#","title":"Comandes per canviar l\u2019usuari o executar comandes amb privilegis d\u2019administrador:"},{"location":"unitats/ud4-permisos/UD4_SOM/#comandes-de-gestio-dusuaris-i-grups","text":"adduser \u21d2 Afegir usuaris al sistema. Tamb\u00e9 s'utilitza per afegir algun usuari a un grup existent. Sintaxi: adduser [opcions] usuari adduser [opcions] grup d\u2019usuaris Opcions: --grupo namegroup \u21d2 L'usuari es crear\u00e0 amb el grup primari especificat. --gid num_gid \u21d2 \u00c9s la mateixa opci\u00f3 que abans, per\u00f2 aquesta vegada s'utilitza el n\u00famero GID en lloc del grup de nom. --home nom del directori home \u21d2 per canviar el directori inicial de l'usuari en lloc del no predeterminat. Normalment \u00e9s el nom /home/nom_usuari. useradd \u21d2 que la comanda fa el mateix tot i que s'ha d'indicar la contrasenya, si no que s'utilitza un signe d'exclamaci\u00f3 (!) I s'afegeix al fitxer /etc/shadow. Aix\u00f2 vol dir que l\u2019usuari est\u00e0 en estat bloquejat; per tant, \u00e9s necessari establir una contrasenya per a aquest compte amb l'ordre passwd. I el mateix amb el directori personal; \u00e9s necessari crear un directori personal. \u00c9s possible crear-lo amb les opcions de comandament. Sintaxi: useradd [opcions] usuari Opcions: -c Descripci\u00f3n del usuario -d Directori home (no el crea, deu existir) -e data de caducitat del compte -g Grup per defecte (no el crea, deu existir) -G Altress grups als quals pertanyer\u00e0 a part del principal -s Shell que utilitzar\u00e0 (/bin/bash) -u Identificador de l\u2019usuari (ID) -m Crea el directori home asignat a l\u2019opci\u00f3 -d Exemple: useradd -c \u201cName Surname \u201d -g admin -d /home/user1 -m -s /bin/bash user1 Crea un usuari que pertany al grup admin, com a home tindr\u00e0 /home/user1 i el shell per defecte ser\u00e0 /bin/bash. deluser \u21d2 per esborrar un usuari. Existeix l'ordre userdel. Tingueu en compte que no \u00e9s possible esborrar un usuari connectat en aquell moment. Sintaxi: deluser [opcions] user. Opcions: -remove-home \u21d2 esborra el directori personal de l\u2019usuari (amb el comandament userdel l\u2019opci\u00f3 que fa el mateix seria -r) -remove-all-files \u21d2 S'eliminaran tots els fitxers que pertanyen a l'usuari i el directori personal. addgroup \u21d2 que l\u2019ordre afegeix un grup al sistema. El mateix resultat s\u2019obtindria amb l\u2019adduser d\u2019ordres i l\u2019opci\u00f3 --group: Sintaxi: addgroup [\u2013group] [-g gid] grupo ``` delgroup \u21d2 Eliminar un grup. El mateix resultat s\u2019obtindria amb el comandant deluser -g grupo. Tingueu en compte que el grup que se suposa que se suprimeix, no hauria de ser un grup principal de cap usuari. Sintaxi: delgroup grupo usermod \u21d2 comanda que modifica un usuari existent. Sintaxi: usermod [opcions] usuari Opcions: * -d directori [-m] \u21d2 canviar el directori personal * -m \u21d2 despla\u00e7a el contingut de l'antic directori personal al directori nou. Es pot utilitzar nom\u00e9s amb l'opci\u00f3 -d. * -g grup \u21d2cambieu el grup principal de l\u2019usuari. * -u uid \u21d2 canvia el n\u00famero de uid de l'usuari. * -l nom \u21d2 canvia el nom de l\u2019usuari. * -s shell \u21d2 canvia el shell groupmod \u21d2 per modificar un grup existent Sintaxi: groupmod [opcions] grup Opcions: * -n nom directori [-m] \u21d2 canviar el grup de nom. * -g gid \u21d2cambieu el GID del grup gpasswd \u21d2 s'utilitza per afegir o eliminar un usuari a algun grup. Sintaxi: gpasswd [opcions] grup usuri gpasswd grup Opcions: * -a \u21d2 afegir usuari al grup * -d \u21d2 eliminar usuaris del grup. * -M \u21d2 afegeix diversos usuaris al grup. Id \u21d2 mostra la informaci\u00f3 de l'usuari; per exemple, UID, nom, grups als quals pertany i GID. Sintaxi: id [opcions] [usuaris] Opcions: * -u \u21d2 - -user \u21d2 nom\u00e9s mostra el UID de l'usuari. * -n \u21d2 - -name\u21d2 mostra nom\u00e9s el nom de l'usuari en lloc dels grups UID group\u21d2 mostra el nom dels grups als quals pertany l'usuari. Sintaxi: group[usuari] finger \u21d2 Mostra la informaci\u00f3 sobre l'usuari especificat. Sense cap usuari especificat, mostra informaci\u00f3 sobre els usuaris connectats. Sintaxi: finger [usuari] Alguns exemples: 1. Creeu un grup nou, anomenat grup nou. sudo addgroup newgroup 2. A continuaci\u00f3, afegiu un usuari anomenat nou usuari. sudo adduser --ingroup newgroup newuser 3. El grup primari \u00e9s grup nou. id newuser 4. Comproveu el resultat. su newuser (fem login amb l\u2019usuari nou) whoami exit 5. Creeu un altre grup anomenat grup2. sudo adduser --group group2 6. Afegiu nou usuari a aquest grup com a grup secundari sudo adduser newuser group2 7. Comproveu el resultat cat /etc/group (fem la comprovaci\u00f3) groups newuser su newuser exit Borrem el que hem fet. sudo deluser --remove-home newuser sudo delgroup group2 sudo deluser --group newgroup ### Ordres per canviar fitxers i directoris d\u2019usuaris i grups. Com sabem, cada fitxer i directori t\u00e9 un propietari i un grup. Per tant, s'utilitzen les ordres seg\u00fcents per canviar el propietari o grup de directoris i fitxers. chown \u21d2 Canvia el propietari del fitxer. \u00c9s possible utilitzar-lo per canviar de grup tamb\u00e9. Sintaxi: chown [options] [owner[:grupo]] file/s Opcions: * -r - -recursivament, cambia propietari i grup dels directoris i fitxers que estan dins del principal. chgrp \u21d2 canviar el propietari del grup del fitxer. Sintaxi: chgrp [opcions] fitxer ``` Opcions: -r - -recursive \u21d2 canviar el propietari del grup per un arbre de directoris.","title":"Comandes de gesti\u00f3 d\u2019usuaris i grups:"},{"location":"unitats/ud4-permisos/UD4_SOM_exercicis/","text":"Usuaris, grups i permisos Usuaris, grups i modificacions Crea un grup anomenat 'equip' deixant que el SO estableixi el GID. Crea l'usuari 'juanito' establint que la seva UID siga 1045. Crea el usari 'pepito' amb UID 1046 i amb grup primari 'equip'. Modifica el nom de el grup 'equip' perqu\u00e8 passi a dir-se 'equipas'. Afegeix a 'juanito' com usario de 'equipas' (en aquest cas no ser\u00e0 el seu grup primari). Mostra la informaci\u00f3 de 'pepito\u2019 que apareix en el fitxer /etc/passwd Amb el comandament 'id' mostra la informaci\u00f3n de 'pepito' i despr\u00e9s la de 'juanito'. Mostra els grups als quals pertany 'juanito'. Ara mostra els grups de 'pepito'. Esborra els usuaris creats i finalment esborra el grup 'equipas'. Mostreu el nom dels propietaris i dels grups dels arxius /etc/hosts i ~/.bashrc, usant ls. {instrucci\u00f3, una sola)} {indiqueu els noms dels propietaris/grups} Mostreu nom, grup, identificador de nom i de grup vostre com a usuari (comanda id) {instrucci\u00f3 i sortida per pantalla} Executeu la instrucci\u00f3 exit {expliqueu el que ha passat en executar-la} Mostreu propietari i grup en forma num\u00e8rica dels arxius /etc/hosts i ~/.bashrc usant ls. {instrucci\u00f3, una sola } {indiqueu els identificadors de propietaris/grups} El nou propietari de l'arxiu ~/.bashrc ha de passar a ser el root (comanda chown). {instrucci\u00f3} {resultat per pantalla} El nou grup de l'arxiu ~/protocols.copia ha de ser users (comanda chgrp). {instrucci\u00f3} Permisos Creeu un arxiu anomenat protocols.copia i un directori anomenat pp al teu home. Mostreu els permisos sobre l'arxiu ~/protocols.copia i sobre el directori ~/pp (comanda ls i opcions). Copieu l'arxiu ~/protocols.copia dins el directori ~/pp. Traieu-vos el dret d'escriptura sobre el directori ~/pp mitjan\u00e7ant la comanda chmod i demostreu que realment no hi podeu escriure (copiar algun arxiu, crear subdirectoris,....) {instrucci\u00f3, visualitzaci\u00f3 dels nous drets i demostraci\u00f3 de la impossibilitat d'escriure a pp} Demostreu que malgrat no podeu escriure a ~/pp, s\u00ed que podeu entrar-hi. Torneu al vostre directori casa (sortiu del directori ~/pp) i traieu-vos el dret d'execuci\u00f3 sobre el directori ~/pp. Demostreu que ara no hi podeu accedir (cd, ls -l). {instrucci\u00f3, visualitzaci\u00f3 dels nous drets, prova de les comandes cd pp, ls -l pp,}. Malgrat no podeu entrar a ~/pp, s\u00ed que podeu veure'n el contingut amb ls pp {explicaci\u00f3 del fet} Deixeu el directori ~/pp amb els drets --xr-xr-x. Demostreu que malgrat no poder llistar el directori pp, s\u00ed que podem entrar-hi i mostrar el contingut de l'arxiu que cont\u00e9. {instrucci\u00f3, visualitzaci\u00f3 dels nous drets,demostraci\u00f3 de les comandes, i explicaci\u00f3} Deixeu el directori ~/pp amb els drets originals rwxr-xr-x. Heu de fer-ho usant chmod amb par\u00e0metre num\u00e8ric en octal. Deixeu l'arxiu ~/pp/protocols.copia amb els drets rwx---r-x. Heu de fer-ho usant chmod amb par\u00e0metre num\u00e8ric en octal.","title":"Exercicis"},{"location":"unitats/ud4-permisos/UD4_SOM_exercicis/#usuaris-grups-i-permisos","text":"Usuaris, grups i modificacions Crea un grup anomenat 'equip' deixant que el SO estableixi el GID. Crea l'usuari 'juanito' establint que la seva UID siga 1045. Crea el usari 'pepito' amb UID 1046 i amb grup primari 'equip'. Modifica el nom de el grup 'equip' perqu\u00e8 passi a dir-se 'equipas'. Afegeix a 'juanito' com usario de 'equipas' (en aquest cas no ser\u00e0 el seu grup primari). Mostra la informaci\u00f3 de 'pepito\u2019 que apareix en el fitxer /etc/passwd Amb el comandament 'id' mostra la informaci\u00f3n de 'pepito' i despr\u00e9s la de 'juanito'. Mostra els grups als quals pertany 'juanito'. Ara mostra els grups de 'pepito'. Esborra els usuaris creats i finalment esborra el grup 'equipas'. Mostreu el nom dels propietaris i dels grups dels arxius /etc/hosts i ~/.bashrc, usant ls. {instrucci\u00f3, una sola)} {indiqueu els noms dels propietaris/grups} Mostreu nom, grup, identificador de nom i de grup vostre com a usuari (comanda id) {instrucci\u00f3 i sortida per pantalla} Executeu la instrucci\u00f3 exit {expliqueu el que ha passat en executar-la} Mostreu propietari i grup en forma num\u00e8rica dels arxius /etc/hosts i ~/.bashrc usant ls. {instrucci\u00f3, una sola } {indiqueu els identificadors de propietaris/grups} El nou propietari de l'arxiu ~/.bashrc ha de passar a ser el root (comanda chown). {instrucci\u00f3} {resultat per pantalla} El nou grup de l'arxiu ~/protocols.copia ha de ser users (comanda chgrp). {instrucci\u00f3} Permisos Creeu un arxiu anomenat protocols.copia i un directori anomenat pp al teu home. Mostreu els permisos sobre l'arxiu ~/protocols.copia i sobre el directori ~/pp (comanda ls i opcions). Copieu l'arxiu ~/protocols.copia dins el directori ~/pp. Traieu-vos el dret d'escriptura sobre el directori ~/pp mitjan\u00e7ant la comanda chmod i demostreu que realment no hi podeu escriure (copiar algun arxiu, crear subdirectoris,....) {instrucci\u00f3, visualitzaci\u00f3 dels nous drets i demostraci\u00f3 de la impossibilitat d'escriure a pp} Demostreu que malgrat no podeu escriure a ~/pp, s\u00ed que podeu entrar-hi. Torneu al vostre directori casa (sortiu del directori ~/pp) i traieu-vos el dret d'execuci\u00f3 sobre el directori ~/pp. Demostreu que ara no hi podeu accedir (cd, ls -l). {instrucci\u00f3, visualitzaci\u00f3 dels nous drets, prova de les comandes cd pp, ls -l pp,}. Malgrat no podeu entrar a ~/pp, s\u00ed que podeu veure'n el contingut amb ls pp {explicaci\u00f3 del fet} Deixeu el directori ~/pp amb els drets --xr-xr-x. Demostreu que malgrat no poder llistar el directori pp, s\u00ed que podem entrar-hi i mostrar el contingut de l'arxiu que cont\u00e9. {instrucci\u00f3, visualitzaci\u00f3 dels nous drets,demostraci\u00f3 de les comandes, i explicaci\u00f3} Deixeu el directori ~/pp amb els drets originals rwxr-xr-x. Heu de fer-ho usant chmod amb par\u00e0metre num\u00e8ric en octal. Deixeu l'arxiu ~/pp/protocols.copia amb els drets rwx---r-x. Heu de fer-ho usant chmod amb par\u00e0metre num\u00e8ric en octal.","title":"Usuaris, grups i permisos"},{"location":"unitats/ud5-processos/UD5_SOM/","text":"Administraci\u00f3 dels sistemes operatius Gesti\u00f3 de processos. Definici\u00f3 de proc\u00e9s: Se sap que un proc\u00e9s \u00e9s un programa que utilitza la CPU o b\u00e9 es carrega principalment a la mem\u00f2ria. La difer\u00e8ncia entre proc\u00e9s i programes \u00e9s que, cada vegada que executem un programa es crea un proc\u00e9s nou i diferent. A m\u00e9s, podem tenir diferents processos del mateix programa al mateix temps i el context de cada proc\u00e9s \u00e9s diferent. Els processos funcionen de la mateixa manera que els usuaris i els grups, tenen assignat un nombre. Aquest n\u00famero es diu Process ID (PID), identifica cada proc\u00e9s i \u00e9s diferent per a cada proc\u00e9s. Gesti\u00f3 de processos: Per gestionar processos es poden utilitzar les ordres seg\u00fcents: ps \u21d2 informa sobre l\u2019estat del proc\u00e9s. Disposa de diferents opcions per mostrar columnes diferents. Les columnes m\u00e9s destacades s\u00f3n: USUARI \u21d2 usuari amb qui s\u2019executa el proc\u00e9s PID \u21d2 Identificador del proc\u00e9s PPID \u21d2 Identificadors del proc\u00e9s pare UID \u21d2Identificador del propietari del proc\u00e9s TTY \u21d2 informaci\u00f3 sobre quin terminal est\u00e0 executant el proc\u00e9s. TIME t\u21d2 temps acumulat de la CPU CMD \u21d2 nom del programa que inicia el proc\u00e9s RSS\u21d2 (mida del conjunt de residents) Mida de la part resident del proc\u00e9s. \u00c9s la quantitat de la mem\u00f2ria principal que ha utilitzat el proc\u00e9s (KiB) NI \u21d2 prioritat del proc\u00e9s. % CPU\u21d2 percentatge de la CPU utilitzada STAT\u21d2Estat del proc\u00e9s. Els estats del proc\u00e9s poden ser: R \u21d2 proc\u00e9s en curs o en cua llesta S \u21d2 Bloquejat (a l'espera que tinguin lloc altres esdeveniments dins del proc\u00e9s.) T \u21d2 aturat. D \u21d2 esperant altres esdeveniments, alguna tasca d'entrada / sortida Z \u21d2 zombi, proc\u00e9s acabat, per\u00f2 ha d\u2019informar al proc\u00e9s pare. Sintaxi: ps [opcions] Opcions: -A \u21d2 mostra les columnes d'informaci\u00f3: PID, TTY, TIME, CMD -e \u21d2 mostra informaci\u00f3 sobre tot el proc\u00e9s del sistema (el mateix que -A) -l \u21d2 mostra molta informaci\u00f3 sobre els processos (el resultat \u00e9s diferent segons el signe - abans de l\u2019opci\u00f3) -u pepe mostra la informaci\u00f3 de l'usuari pepe. -ely \u21d2 que les opcions s\u2019utilitzen juntes per tal de mostrar tota la informaci\u00f3 com a PID,PPID, HORA, CMD, NI, RSS ,. . . aux \u21d2 (sense signe -) mostra les columnes de USER, PID, RSS, TTY, STAT,TEMPS,... pstree \u21d2 mostra els processos en execuci\u00f3 com a arbre. Sintaxi: pstree [opcions] Opcions: -u \u21d2 mostra el propietari del proc\u00e9s Exemples: Mostra la informaci\u00f3 de tots els processos que s'estan executant. Mostra el PID d'alguns processos d'execuci\u00f3. Mostra tots els processos com a arbre i mostra els propietaris. Pagina la sortida Soluci\u00f3: ps -aux ps -A | nom_proc grep -i pstree -Gu | more nohup, & \u21d2 S'utilitza per executar processos en segon pla. En qualsevol cas, es troba la terminal disponible per executar ordres mentre el proc\u00e9s en segon pla s\u2019est\u00e0 executant. Sintaxi: nohup ordre & sleep \u21d2 aquest comandament s'utilitza per retardar un per\u00edode de temps determinat. La unitat per defecte est\u00e0 en segons, per\u00f2 \u00e9s possible utilitzar-lo amb minuts, hores i dies parells (m, h, d). Exemple: sleep 5 \u21d2 5 segons es retardar\u00e0. Sleep 5 m \u21d2 5 minuts de retard. Exemples: Executeu l'ordre de suspensi\u00f3 per temporitzar 10 segons i prova a executar una altra comanda com ls -l. Mireu que la segona ordre no s\u2019executar\u00e0 despr\u00e8s de deu segons. Executeu la comanda de suspensi\u00f3 per retardar-la de nou 10 segons. Per\u00f2 aquesta vegada utilitza la comanda per enviar-la a segon pla (nohup o &). Soluci\u00f3: sleep 10 sleep 10 o nohup sleep 10 & Ara, la sol\u00b7licitud est\u00e0 disponible per executar noves ordres i \u00e9s possible executar-la ls o algun altre ordre a causa de l'ordre de suspensi\u00f3 s'est\u00e0 executant en segon pla. renice \u21d2 la comanda s\u2019utilitza per modificar la prioritat d\u2019un proc\u00e9s en execuci\u00f3 Sintaxi: renice [opcions] prioritat PID_process Opcions: -p \u21d2 s'utilitza per si voleu aplicar la comanda a m\u00e9s d'un proc\u00e9s. -u \u21d2 s'utilitza en cas que l'objectiu sigui aplicar la comanda a tots els processos d\u2019algun usuari. Exemples: L'objectiu desitjat per a un usuari \u00e9s executar una operaci\u00f3 cient\u00edfica en un proc\u00e9s, per\u00f2 mentre que aquest proc\u00e9s s\u2019executa, l\u2019usuari vol executar un joc. Per tant, l'usuari vol canviar la prioritat del proc\u00e9s cient\u00edfic des de que s'est\u00e0 executant el joc. Si el proc\u00e9s cient\u00edfic est\u00e0 utilitzant el PID 785: renice +15 785 on la prioritat m\u00e9s positiva \u00e9s la prioritat inferior Al ser l\u2019administrador d\u2019usuaris del sistema, es fa evident que s\u2019executa un usuari molts processos. Per tant, \u00e9s possible canviar tots els processos d'aquest usuari: renice +19 -nom_usuari nice \u21d2 Aquest comandament s\u2019utilitza per establir la prioritat del proc\u00e9s. La prioritat disponible per al proc\u00e9s pot anar de -20 (prioritat m\u00e0xima) a 19 (prioritat m\u00ednima). Es pot veure la prioritat a la columna NI (comanda ps). M\u00e9s endavant, es calcula la prioritat real, i es pot veure a la columna PRI (comanda ps). Sintaxi: nice [opcions] comanda Opcions: -n n\u00famero \u21d2 la comanda s\u2019executar\u00e0 amb la prioritat indicada. Exemple: Si l'usuari vol gravar l'ISO d'Ubuntu al cd-Rom, per\u00f2 al mateix temps vol executar LliureOffice, per tal d'anul\u00b7lar alguna tasca, l'usuari pot executar la comanda per realitzar el Ubuntu iso amb la prioritat establerta, ja que fer un iso \u00e9s un proc\u00e9s molt exigent en termes de recursos utilitzats. nice -n 19 dd if=/dev/cdrom of=~/ubuntu-19.10-desktop-amd64.iso jobs \u21d2 mostra l'estat de les tasques iniciades a la finestra del terminal actual. Les feines ho s\u00f3n numerats a partir de l\u20191 de cada sessi\u00f3. Alguns programes utilitzen els n\u00fameros d'identificaci\u00f3 de treball en lloc de PIDs. Per suspendre algun proc\u00e9s, cal pr\u00e9mer les tecles CTRL + Z. Sintaxi: jobs fg \u21d2 que la comanda s\u2019utilitza per enviar a primer pla els processos que es troben en segon pla o aturat. Sintaxi: fg %n on n \u00e9s el n\u00famero de la llista que apareix per la comanda Jobs. Si s'especifica algun proc\u00e9s, el processar amb la marca + a la llista d'ordres de treball que s'envia a primer pla. bg \u21d2 Aquesta ordre s'utilitza per reiniciar un proc\u00e9s de fons aturat. Sintaxi: bg %n on n \u00e9s el n\u00famero de la llista que apareix per l'ordre Jobs. kill \u21d2 per matar el proc\u00e9s indicat. S'utilitza per enviar alguns altres senyals al proc\u00e9s. Sintaxi: kill [opcions] PID Opcions: -9 \u21d2 -SIGKILL\u21d2 matar el proc\u00e9s el PID del qual s'envia com a argument. -l \u21d2 mostra tots els senyals que es poden enviar al proc\u00e9s. killall \u21d2 matar tots els processos relacionats amb el proc\u00e9s indicat. Aquesta vegada, el nom de el proc\u00e9s s'ha d'especificar en lloc del n\u00famero de proc\u00e9s. Sintaxi: killall [opcions] nom_proc\u00e9s Opcions: -kill \u21d2 matar el proc\u00e9s. -i \u21d2pregunta si realment es vol matar el proc\u00e9s. -l \u21d2 mostra tots els senyals que es poden enviar al proc\u00e9s. Time \u21d2 s'executa amb una ordre per saber el temps que es dedica a executar la comanda, recursos utilitzats, etc. Sintaxi: time comanda top\u21d2 Mostra informaci\u00f3 sobre el sistema i els processos executats. La informaci\u00f3 s\u2019actualitza cada 3 segons. Sintaxi: top [opcions] Opcions: -d \u21d2 per canviar el retard (en segons) entre les actualitzacions de la part superior. Exemples: Executeu nano text4.txt. Atureu-lo i envieu-lo a segon pla. Comproveu-ho. Executeu nano text5.txt en segon pla. Envieu el primer proc\u00e9s a primer pla. Aix\u00f2 vol dir que el proc\u00e9s es torna a executar. Tanca nano Mata el segon proc\u00e9s. Soluci\u00f3: nano txet4.txt CTRL + Z jobs nano text5.txt & jobs / fg% 1 CTRL + X kill % 2 Exemples finals: Instala 'leafpad' sudo apt-get install leafpad Executa 'leafpad' de manera que vaja directament a segon pl\u00e0. Ara mostra els treballs en execuci\u00f3 o segon pla.Porta a primer pla de nou el proc\u00e9s 'Leafpad'. Amb la combinaci\u00f3 de tecles corresponent, envia a segon pla aquest proc\u00e9s. Torna a mirar els treballs oberts. Mata el proc\u00e9s corresponent a 'Leafpad'. Torna a mirar els treballs oberts. Com veus, tot i que abans ja s'havia matat el proc\u00e9s, seguia apareixent a la llista perqu\u00e8 es pugui veure que ja no va a apar\u00e8ixer m\u00e9s. Despr\u00e9s tancar-lo amb normalitat apareix el proc\u00e9s amb l'estat Fet. Despr\u00e9s de tancar-lo amb el senyal SIGTERM apareix el proc\u00e9s amb l'estat Acabat. La segona vegada que l'executem desapareixen els processos. leafpad & jobs fg %1 CONTROL Z jobs kill %1 o bien killall \u2013KILL leafpad o kill -9 PID jobs jobs Executa de nou 'Leafpad' perqu\u00e8 vagi a segon pla. Executa 'gedit' perqu\u00e8 vagi tamb\u00e9 a segon pla. Revisa els treballs oberts. Envia a primer pla a 'gedit'. Despr\u00e9s tanca-ho des de l'entorn gr\u00e0fic. Revisa els treballs oberts i mira si hi ha diferent informaci\u00f3 entre matar el proc\u00e9s amb kill o des de l'entorn gr\u00e0fic. Torna a executar 'gedit' perqu\u00e8 vagi a segon pla. Ara envia a primer pla a 'Leafpad'. Amb la combinaci\u00f3 de tecles corresponent envia-ho a segon pla. Llista els treballs oberts. Mata els processos de 'gedit' i de 'Leafpad'. Mostra les tasques oberts leafpad & gedit & jobs fg %2 jobs gedit & fg leafpad CONTROL Z jobs kill %1 %2 jobs Instalacions i actualitzacions El software \\begin{figure} \\centering \\includegraphics[width=11cm]{img/software.png} \\caption{El software} \\end{figure} Qu\u00e8 s\u00f3n les depend\u00e8ncies? Un Programari normalment no funciona si no t\u00e9 una s\u00e8rie de llibreries o programes de suport que el propi programari fa servir per no haver d'implementar ell mateix totes les funcions, llibreries de dibuixat, d'acc\u00e9s a base de dades ... Important: \u00c9s tasca dels programadors del Programari indicar quines s\u00f3n les depend\u00e8ncies de la mateixa, per\u00f2 a l'igual que hi ha errors en el codi, de vegades ocorren errors en la definici\u00f3 de les depend\u00e8ncies i ser\u00e0 tasca dels administradors de sistemes fer que el Programari funcioni en els sistemes. Les depend\u00e8ncies solen estar especificades en fitxers Readme.txt, en les instruccions d'instal\u00b7laci\u00f3 o en el cas dels compilats i preparats per a la seva distribuci\u00f3 aquestes depend\u00e8ncies poden ser consultades via els gestors de paquets, tal com veurem m\u00e9s endavant en el tema. Si una depend\u00e8ncia no est\u00e0 instal\u00b7lada, el programari pot no funcionar o senzillament no funcionar en absolut. \u00c9s totalment indispensable que les depend\u00e8ncies estiguin instal\u00b7lades, a l'acci\u00f3 d'instal\u00b7lar les depend\u00e8ncies i les depend\u00e8ncies de les mateixes en cert ordre se li crida Resoluci\u00f3 de depend\u00e8ncies. La versi\u00f3 d'un Programari (versionat) El versionat de programari \u00e9s el proc\u00e9s d'assignaci\u00f3 d'un nom, codi o n\u00famero \u00fanic, a un programari per a indicar el seu nivell de desenvolupament. Generalment s'assigna dos nombres, mayor.menor (en angl\u00e8s: major.minor), que van incrementant a mesura que el desenvolupament de programari augmenti i es requereixi l'assignaci\u00f3 d'un nou nom, codi o n\u00famero \u00fanic. Encara que menys habituals, tamb\u00e9 pot indicar un altre nombre m\u00e9s, micro, i la fase de desenvolupament en qu\u00e8 es troba el programari. S'augmenta el nombre quan: major: el programari pateix grans canvis i millores. menor: el programari pateix petits canvis i / o correccions d'errors. micro: s'aplica una correcci\u00f3 al programari, i al seu torn pateix pocs canvis. fase: s'indica si es troba en una fase de desenvolupament que no sigui la final o estable, \u00e9s a dir, una fase inestable o en proves. Se sol indicar amb un gui\u00f3 seguit de la fase corresponent en min\u00fascules, o un espai seguit de la fase. Hi pot haver diverses versions d'una mateixa fase, per indicar l'avan\u00e7 en el desenvolupament de programari per\u00f2 mantenint la fase per indicar que encara \u00e9s inestable, indicant afegint un nombre a la fi de el nom de la fase que va incrementant conforme es publiquin noves versions d'aquesta fase. Seguretat i actualitzacions Les versions de programari s\u00f3n sempre \"creixents\" en el temps, i \u00e9s tasca dels administradors de sistemes mantenir el programari instal\u00b7lat actualitzat i operatiu. Aix\u00f2 \u00e9s especialment important en servidors i estacions de treball cr\u00edtiques, ja que un programari desactualitzat, \u00e9s un programari vulnerable. Els virus, hackers, i en general aquell programari que tracta d'aprofitar-se de fallades de programari es recolzen en \"errors coneguts\" de l'programari que es troba instal\u00b7lat per poder aconseguir els seus objectius. A continuaci\u00f3 es mostra un gr\u00e0fic (2014) que mostra els errors detectats en el dia \"0\" del llan\u00e7ament de cada paquet de programari i els bugs que encara persisteixen en l'any seg\u00fcent. Ens adonem de seguida que si no actualitzem el programari, tots els errors que hi poden ser utilitzats pels atacants per a comprometre la seguretat. Paquets en linux: Els paquets existents en GNU / Linux, s\u00f3n dependents de la distribuci\u00f3 en la qual s'estiguin fent servir; s\u00f3n utilitzats normalment per a la compressi\u00f3 d'aplicacions en diferents formats per a diferents mitjans d'instal\u00b7laci\u00f3. Aquests s\u00f3n un conjunt de fitxers que contenen instruccions per a la reconstrucci\u00f3 de l'aplicaci\u00f3 dins del sistema nou, dins d'aquests, podem trobar, Paquets Binaris i Paquets de codi Font. Els Paquets Binaris, contenen, com s'esmenta, la informaci\u00f3 necess\u00e0ria per reconstruir una aplicaci\u00f3 en un sistema nou, sense necessitat de trobar-se en la mateixa computadora; els m\u00e9s comuns s\u00f3n: DEB: Contenen executables, arxius de configuraci\u00f3, p\u00e0gines d'informaci\u00f3, drets de copyright i altres documentacions, els paquets Debian es col\u00b7loquen en arxius .deb. El nom del paquet ha de contenir: <NumeroDeVersi\u00f3n> - <Versi\u00f3nDeDebian> - <ArquitecturaDeDebian> .deb Un desavantatge d'aquest tipus de paquets, \u00e9s el seu sistema d'actualitzaci\u00f3, a causa que, es necessita tenir tots els arxius, com si es tract\u00e9s una nova instal\u00b7laci\u00f3. Aquests paquets tamb\u00e9 s\u00f3n usats per distribucions basades en la distribuci\u00f3 Debian, algunes d'aquestes, s\u00f3n: Ubuntu, Kubuntu, ZorinOS, Linux Mint, entre otras. RPM: Per les seves sigles en angl\u00e8s Redhat Package Manager, aquest tipus d'empaquetat per Linux va ser desenvolupat per a la distribuci\u00f3 de Red Hat, per tal de crear un sistema f\u00e0cil de crear i instal\u00b7lar. Actualment totes les distribucions basades en Red Hat ocupen els paquets RPM, algunes d'elles s\u00f3n: Fedora i openSUSE. Un avantatge, sobre aquest tipus de paquets sobre altres, \u00e9s la seva forma d'actualitzaci\u00f3 per a les aplicacions, aquests, no necessiten tenir les mateixes dades que l'instal\u00b7lador original, nom\u00e9s pot incloure (si es desitja) els arxius que s'actualitzaran, aix\u00f2 redueix altament el pes del paquet. TGZ: \u00c9s un arxiu de paquets espec\u00edfic per a Unix, comprimit amb el compressor GNU Zip. \u00c9s un paquet de codi font, ocupat per contenir aplicacions, i el seu codi font, per no haver de crear un tipus de paquet espec\u00edfic per a cada distribuci\u00f3. A difer\u00e8ncia dels paquets .deb, o .rpm, aquest no cont\u00e9 instruccions particulars d'instal\u00b7laci\u00f3 per a cada distribuci\u00f3, de manera que la instal\u00b7laci\u00f3 del contingut haur\u00e0 de ser compilat per l'usuari. Ebuild: Paquet usat nom\u00e9s per la distribuci\u00f3 Gentoo, consisteix en un script bash, executable nom\u00e9s en un entorn espec\u00edfic. Els seus arxius, deuen ser arxius de text amb l'extensi\u00f3 .ebuild. El nomenament d'aquest paquet ha d'obeir la regla seg\u00fcent: nom-versi\u00f3n.ebuild El contingut del nom nom\u00e9s pot contenir lletres min\u00fascules sense accentuar, d\u00edgits del zero al nou, guions, guions baixos o el signe d'addici\u00f3. Les actualitzacions Les actualitzacions dels paquets poden realitzar-se amb tan sols una ordre: apt-get upgrade Podem utilitzar aquesta opci\u00f3 per actualitzar els paquets de la distribuci\u00f3 actual, o b\u00e9 per actualitzar a una nova distribuci\u00f3, tot i que el comandament \u00e9s una millor opci\u00f3. apt-get dist-upgrade \u00c9s molt \u00fatil utilitat junt amb l'opci\u00f3 -u. Aquesta opci\u00f3 mostra la llista completa de paquets que APT s'actualitzar\u00e0. Sense ella, s'estaria actualitzant a cegues. APT descarregar\u00e0 les versions m\u00e9s recents de cada paquet i les instal\u00b7lar\u00e0 de la manera m\u00e9s apropiada. \u00c9s molt important executar apt-get update abans de provar aix\u00f2. \\begin{figure} \\centering \\includegraphics[width=11cm]{img/update.png} \\caption{actualizaci\u00f3n} \\end{figure} Els repositoris Podem veure la llista de repositoris principal d'Ubuntu escrivint sudo nano /etc/apt/sources.list \\begin{figure} \\centering \\includegraphics[width=11cm]{img/repositoris.png} \\caption{Els repositoris } \\end{figure} El primer que hem de fer \u00e9s una c\u00f2pia per evitar-nos problemes davant de qualsevol modificaci\u00f3. Exemples: deb-src http://archive.ubuntu.com/ubuntu groovy universe restricted main multiverse on: deb: Indica un repositori de paquets pr\u00e8viament compilats. deb-src: \u00c9s un repositori de codi font de programes. http://archive.ubuntu.com/ubuntu: \u00c9s l'identificador uniforme de recursos (per les seves sigles en angl\u00e8s). \u00c9s el link d'acc\u00e9s al servidor on est\u00e0 el repositori. groovy: Indica la versi\u00f3 de sistema operatiu. universe restricted main multiverse: indica el tipus de repositori. Perqu\u00e8 qualsevol canvi que fem en els repositoris funcioni, hem de guardar la llista primer i despr\u00e8s actualitzar la llista de repositoris. Tamb\u00e9 podem afegir repositoris des de la l\u00ednia de comandes: sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ groovy main' sudo apt update La comanda sudo add-apt-repository tamb\u00e9 s'utilitza per als paquets personals d'arxius. Per exemple per afegir el repositori ppa de Krita, escrivim: sudo add-apt-repository ppa: kritalime/ppa sudo apt update Instalar paquets des de els repositoris Comanda apt: Per instal\u00b7lar un paquet nou: $ sudo apt-get install nom_del_paquet Opci\u00f3 remove per eliminar un paquet del nostre sistema utilitzem: $ sudo apt-get remove nom_del_paquet \\begin{figure} \\centering \\includegraphics[width=11cm]{img/apt.png} \\caption{La comanda apt } \\end{figure} Comanda dpkg \\begin{figure} \\centering \\includegraphics[width=11cm]{img/dpkg.png} \\caption{La comanda dpkg } \\end{figure} Comanda rpm A Red Hat l'eina per excel\u00b7l\u00e8ncia per administrar paquets \u00e9s la comanda rpm que posseeix molt\u00edssimes opcions. Internament rpm es basa en una base de dades amb informaci\u00f3 sobre el instal \u00b7 lat, les depend\u00e8ncies existents, etc. Aquesta base de dades \u00e9s actualitzada amb transpar\u00e8ncia pel rpm quan s'instal\u00b7la, s'actualitza o desinstal un paquet. Tamb\u00e9 es pot consultar per con\u00e8ixer informaci\u00f3 diversa sobre el ja instal\u00b7lat en el sistema. \\begin{figure} \\centering \\includegraphics[width=11cm]{img/rpm.png} \\caption{La comanda rpm } \\end{figure}","title":"Teoria"},{"location":"unitats/ud5-processos/UD5_SOM/#administracio-dels-sistemes-operatius","text":"","title":"Administraci\u00f3 dels sistemes operatius"},{"location":"unitats/ud5-processos/UD5_SOM/#gestio-de-processos","text":"","title":"Gesti\u00f3 de processos."},{"location":"unitats/ud5-processos/UD5_SOM/#definicio-de-proces","text":"Se sap que un proc\u00e9s \u00e9s un programa que utilitza la CPU o b\u00e9 es carrega principalment a la mem\u00f2ria. La difer\u00e8ncia entre proc\u00e9s i programes \u00e9s que, cada vegada que executem un programa es crea un proc\u00e9s nou i diferent. A m\u00e9s, podem tenir diferents processos del mateix programa al mateix temps i el context de cada proc\u00e9s \u00e9s diferent. Els processos funcionen de la mateixa manera que els usuaris i els grups, tenen assignat un nombre. Aquest n\u00famero es diu Process ID (PID), identifica cada proc\u00e9s i \u00e9s diferent per a cada proc\u00e9s.","title":"Definici\u00f3 de proc\u00e9s:"},{"location":"unitats/ud5-processos/UD5_SOM/#gestio-de-processos_1","text":"Per gestionar processos es poden utilitzar les ordres seg\u00fcents: ps \u21d2 informa sobre l\u2019estat del proc\u00e9s. Disposa de diferents opcions per mostrar columnes diferents. Les columnes m\u00e9s destacades s\u00f3n: USUARI \u21d2 usuari amb qui s\u2019executa el proc\u00e9s PID \u21d2 Identificador del proc\u00e9s PPID \u21d2 Identificadors del proc\u00e9s pare UID \u21d2Identificador del propietari del proc\u00e9s TTY \u21d2 informaci\u00f3 sobre quin terminal est\u00e0 executant el proc\u00e9s. TIME t\u21d2 temps acumulat de la CPU CMD \u21d2 nom del programa que inicia el proc\u00e9s RSS\u21d2 (mida del conjunt de residents) Mida de la part resident del proc\u00e9s. \u00c9s la quantitat de la mem\u00f2ria principal que ha utilitzat el proc\u00e9s (KiB) NI \u21d2 prioritat del proc\u00e9s. % CPU\u21d2 percentatge de la CPU utilitzada STAT\u21d2Estat del proc\u00e9s. Els estats del proc\u00e9s poden ser: R \u21d2 proc\u00e9s en curs o en cua llesta S \u21d2 Bloquejat (a l'espera que tinguin lloc altres esdeveniments dins del proc\u00e9s.) T \u21d2 aturat. D \u21d2 esperant altres esdeveniments, alguna tasca d'entrada / sortida Z \u21d2 zombi, proc\u00e9s acabat, per\u00f2 ha d\u2019informar al proc\u00e9s pare. Sintaxi: ps [opcions] Opcions: -A \u21d2 mostra les columnes d'informaci\u00f3: PID, TTY, TIME, CMD -e \u21d2 mostra informaci\u00f3 sobre tot el proc\u00e9s del sistema (el mateix que -A) -l \u21d2 mostra molta informaci\u00f3 sobre els processos (el resultat \u00e9s diferent segons el signe - abans de l\u2019opci\u00f3) -u pepe mostra la informaci\u00f3 de l'usuari pepe. -ely \u21d2 que les opcions s\u2019utilitzen juntes per tal de mostrar tota la informaci\u00f3 com a PID,PPID, HORA, CMD, NI, RSS ,. . . aux \u21d2 (sense signe -) mostra les columnes de USER, PID, RSS, TTY, STAT,TEMPS,... pstree \u21d2 mostra els processos en execuci\u00f3 com a arbre. Sintaxi: pstree [opcions] Opcions: -u \u21d2 mostra el propietari del proc\u00e9s Exemples: Mostra la informaci\u00f3 de tots els processos que s'estan executant. Mostra el PID d'alguns processos d'execuci\u00f3. Mostra tots els processos com a arbre i mostra els propietaris. Pagina la sortida Soluci\u00f3: ps -aux ps -A | nom_proc grep -i pstree -Gu | more nohup, & \u21d2 S'utilitza per executar processos en segon pla. En qualsevol cas, es troba la terminal disponible per executar ordres mentre el proc\u00e9s en segon pla s\u2019est\u00e0 executant. Sintaxi: nohup ordre & sleep \u21d2 aquest comandament s'utilitza per retardar un per\u00edode de temps determinat. La unitat per defecte est\u00e0 en segons, per\u00f2 \u00e9s possible utilitzar-lo amb minuts, hores i dies parells (m, h, d). Exemple: sleep 5 \u21d2 5 segons es retardar\u00e0. Sleep 5 m \u21d2 5 minuts de retard. Exemples: Executeu l'ordre de suspensi\u00f3 per temporitzar 10 segons i prova a executar una altra comanda com ls -l. Mireu que la segona ordre no s\u2019executar\u00e0 despr\u00e8s de deu segons. Executeu la comanda de suspensi\u00f3 per retardar-la de nou 10 segons. Per\u00f2 aquesta vegada utilitza la comanda per enviar-la a segon pla (nohup o &). Soluci\u00f3: sleep 10 sleep 10 o nohup sleep 10 & Ara, la sol\u00b7licitud est\u00e0 disponible per executar noves ordres i \u00e9s possible executar-la ls o algun altre ordre a causa de l'ordre de suspensi\u00f3 s'est\u00e0 executant en segon pla. renice \u21d2 la comanda s\u2019utilitza per modificar la prioritat d\u2019un proc\u00e9s en execuci\u00f3 Sintaxi: renice [opcions] prioritat PID_process Opcions: -p \u21d2 s'utilitza per si voleu aplicar la comanda a m\u00e9s d'un proc\u00e9s. -u \u21d2 s'utilitza en cas que l'objectiu sigui aplicar la comanda a tots els processos d\u2019algun usuari. Exemples: L'objectiu desitjat per a un usuari \u00e9s executar una operaci\u00f3 cient\u00edfica en un proc\u00e9s, per\u00f2 mentre que aquest proc\u00e9s s\u2019executa, l\u2019usuari vol executar un joc. Per tant, l'usuari vol canviar la prioritat del proc\u00e9s cient\u00edfic des de que s'est\u00e0 executant el joc. Si el proc\u00e9s cient\u00edfic est\u00e0 utilitzant el PID 785: renice +15 785 on la prioritat m\u00e9s positiva \u00e9s la prioritat inferior Al ser l\u2019administrador d\u2019usuaris del sistema, es fa evident que s\u2019executa un usuari molts processos. Per tant, \u00e9s possible canviar tots els processos d'aquest usuari: renice +19 -nom_usuari nice \u21d2 Aquest comandament s\u2019utilitza per establir la prioritat del proc\u00e9s. La prioritat disponible per al proc\u00e9s pot anar de -20 (prioritat m\u00e0xima) a 19 (prioritat m\u00ednima). Es pot veure la prioritat a la columna NI (comanda ps). M\u00e9s endavant, es calcula la prioritat real, i es pot veure a la columna PRI (comanda ps). Sintaxi: nice [opcions] comanda Opcions: -n n\u00famero \u21d2 la comanda s\u2019executar\u00e0 amb la prioritat indicada. Exemple: Si l'usuari vol gravar l'ISO d'Ubuntu al cd-Rom, per\u00f2 al mateix temps vol executar LliureOffice, per tal d'anul\u00b7lar alguna tasca, l'usuari pot executar la comanda per realitzar el Ubuntu iso amb la prioritat establerta, ja que fer un iso \u00e9s un proc\u00e9s molt exigent en termes de recursos utilitzats. nice -n 19 dd if=/dev/cdrom of=~/ubuntu-19.10-desktop-amd64.iso jobs \u21d2 mostra l'estat de les tasques iniciades a la finestra del terminal actual. Les feines ho s\u00f3n numerats a partir de l\u20191 de cada sessi\u00f3. Alguns programes utilitzen els n\u00fameros d'identificaci\u00f3 de treball en lloc de PIDs. Per suspendre algun proc\u00e9s, cal pr\u00e9mer les tecles CTRL + Z. Sintaxi: jobs fg \u21d2 que la comanda s\u2019utilitza per enviar a primer pla els processos que es troben en segon pla o aturat. Sintaxi: fg %n on n \u00e9s el n\u00famero de la llista que apareix per la comanda Jobs. Si s'especifica algun proc\u00e9s, el processar amb la marca + a la llista d'ordres de treball que s'envia a primer pla. bg \u21d2 Aquesta ordre s'utilitza per reiniciar un proc\u00e9s de fons aturat. Sintaxi: bg %n on n \u00e9s el n\u00famero de la llista que apareix per l'ordre Jobs. kill \u21d2 per matar el proc\u00e9s indicat. S'utilitza per enviar alguns altres senyals al proc\u00e9s. Sintaxi: kill [opcions] PID Opcions: -9 \u21d2 -SIGKILL\u21d2 matar el proc\u00e9s el PID del qual s'envia com a argument. -l \u21d2 mostra tots els senyals que es poden enviar al proc\u00e9s. killall \u21d2 matar tots els processos relacionats amb el proc\u00e9s indicat. Aquesta vegada, el nom de el proc\u00e9s s'ha d'especificar en lloc del n\u00famero de proc\u00e9s. Sintaxi: killall [opcions] nom_proc\u00e9s Opcions: -kill \u21d2 matar el proc\u00e9s. -i \u21d2pregunta si realment es vol matar el proc\u00e9s. -l \u21d2 mostra tots els senyals que es poden enviar al proc\u00e9s. Time \u21d2 s'executa amb una ordre per saber el temps que es dedica a executar la comanda, recursos utilitzats, etc. Sintaxi: time comanda top\u21d2 Mostra informaci\u00f3 sobre el sistema i els processos executats. La informaci\u00f3 s\u2019actualitza cada 3 segons. Sintaxi: top [opcions] Opcions: -d \u21d2 per canviar el retard (en segons) entre les actualitzacions de la part superior. Exemples: Executeu nano text4.txt. Atureu-lo i envieu-lo a segon pla. Comproveu-ho. Executeu nano text5.txt en segon pla. Envieu el primer proc\u00e9s a primer pla. Aix\u00f2 vol dir que el proc\u00e9s es torna a executar. Tanca nano Mata el segon proc\u00e9s. Soluci\u00f3: nano txet4.txt CTRL + Z jobs nano text5.txt & jobs / fg% 1 CTRL + X kill % 2 Exemples finals: Instala 'leafpad' sudo apt-get install leafpad Executa 'leafpad' de manera que vaja directament a segon pl\u00e0. Ara mostra els treballs en execuci\u00f3 o segon pla.Porta a primer pla de nou el proc\u00e9s 'Leafpad'. Amb la combinaci\u00f3 de tecles corresponent, envia a segon pla aquest proc\u00e9s. Torna a mirar els treballs oberts. Mata el proc\u00e9s corresponent a 'Leafpad'. Torna a mirar els treballs oberts. Com veus, tot i que abans ja s'havia matat el proc\u00e9s, seguia apareixent a la llista perqu\u00e8 es pugui veure que ja no va a apar\u00e8ixer m\u00e9s. Despr\u00e9s tancar-lo amb normalitat apareix el proc\u00e9s amb l'estat Fet. Despr\u00e9s de tancar-lo amb el senyal SIGTERM apareix el proc\u00e9s amb l'estat Acabat. La segona vegada que l'executem desapareixen els processos. leafpad & jobs fg %1 CONTROL Z jobs kill %1 o bien killall \u2013KILL leafpad o kill -9 PID jobs jobs Executa de nou 'Leafpad' perqu\u00e8 vagi a segon pla. Executa 'gedit' perqu\u00e8 vagi tamb\u00e9 a segon pla. Revisa els treballs oberts. Envia a primer pla a 'gedit'. Despr\u00e9s tanca-ho des de l'entorn gr\u00e0fic. Revisa els treballs oberts i mira si hi ha diferent informaci\u00f3 entre matar el proc\u00e9s amb kill o des de l'entorn gr\u00e0fic. Torna a executar 'gedit' perqu\u00e8 vagi a segon pla. Ara envia a primer pla a 'Leafpad'. Amb la combinaci\u00f3 de tecles corresponent envia-ho a segon pla. Llista els treballs oberts. Mata els processos de 'gedit' i de 'Leafpad'. Mostra les tasques oberts leafpad & gedit & jobs fg %2 jobs gedit & fg leafpad CONTROL Z jobs kill %1 %2 jobs","title":"Gesti\u00f3 de processos:"},{"location":"unitats/ud5-processos/UD5_SOM/#instalacions-i-actualitzacions","text":"","title":"Instalacions i actualitzacions"},{"location":"unitats/ud5-processos/UD5_SOM/#el-software","text":"\\begin{figure} \\centering \\includegraphics[width=11cm]{img/software.png} \\caption{El software} \\end{figure}","title":"El software"},{"location":"unitats/ud5-processos/UD5_SOM/#que-son-les-dependencies","text":"Un Programari normalment no funciona si no t\u00e9 una s\u00e8rie de llibreries o programes de suport que el propi programari fa servir per no haver d'implementar ell mateix totes les funcions, llibreries de dibuixat, d'acc\u00e9s a base de dades ... Important: \u00c9s tasca dels programadors del Programari indicar quines s\u00f3n les depend\u00e8ncies de la mateixa, per\u00f2 a l'igual que hi ha errors en el codi, de vegades ocorren errors en la definici\u00f3 de les depend\u00e8ncies i ser\u00e0 tasca dels administradors de sistemes fer que el Programari funcioni en els sistemes. Les depend\u00e8ncies solen estar especificades en fitxers Readme.txt, en les instruccions d'instal\u00b7laci\u00f3 o en el cas dels compilats i preparats per a la seva distribuci\u00f3 aquestes depend\u00e8ncies poden ser consultades via els gestors de paquets, tal com veurem m\u00e9s endavant en el tema. Si una depend\u00e8ncia no est\u00e0 instal\u00b7lada, el programari pot no funcionar o senzillament no funcionar en absolut. \u00c9s totalment indispensable que les depend\u00e8ncies estiguin instal\u00b7lades, a l'acci\u00f3 d'instal\u00b7lar les depend\u00e8ncies i les depend\u00e8ncies de les mateixes en cert ordre se li crida Resoluci\u00f3 de depend\u00e8ncies.","title":"Qu\u00e8 s\u00f3n les depend\u00e8ncies?"},{"location":"unitats/ud5-processos/UD5_SOM/#la-versio-dun-programari-versionat","text":"El versionat de programari \u00e9s el proc\u00e9s d'assignaci\u00f3 d'un nom, codi o n\u00famero \u00fanic, a un programari per a indicar el seu nivell de desenvolupament. Generalment s'assigna dos nombres, mayor.menor (en angl\u00e8s: major.minor), que van incrementant a mesura que el desenvolupament de programari augmenti i es requereixi l'assignaci\u00f3 d'un nou nom, codi o n\u00famero \u00fanic. Encara que menys habituals, tamb\u00e9 pot indicar un altre nombre m\u00e9s, micro, i la fase de desenvolupament en qu\u00e8 es troba el programari. S'augmenta el nombre quan: major: el programari pateix grans canvis i millores. menor: el programari pateix petits canvis i / o correccions d'errors. micro: s'aplica una correcci\u00f3 al programari, i al seu torn pateix pocs canvis. fase: s'indica si es troba en una fase de desenvolupament que no sigui la final o estable, \u00e9s a dir, una fase inestable o en proves. Se sol indicar amb un gui\u00f3 seguit de la fase corresponent en min\u00fascules, o un espai seguit de la fase. Hi pot haver diverses versions d'una mateixa fase, per indicar l'avan\u00e7 en el desenvolupament de programari per\u00f2 mantenint la fase per indicar que encara \u00e9s inestable, indicant afegint un nombre a la fi de el nom de la fase que va incrementant conforme es publiquin noves versions d'aquesta fase.","title":"La versi\u00f3 d'un Programari (versionat)"},{"location":"unitats/ud5-processos/UD5_SOM/#seguretat-i-actualitzacions","text":"Les versions de programari s\u00f3n sempre \"creixents\" en el temps, i \u00e9s tasca dels administradors de sistemes mantenir el programari instal\u00b7lat actualitzat i operatiu. Aix\u00f2 \u00e9s especialment important en servidors i estacions de treball cr\u00edtiques, ja que un programari desactualitzat, \u00e9s un programari vulnerable. Els virus, hackers, i en general aquell programari que tracta d'aprofitar-se de fallades de programari es recolzen en \"errors coneguts\" de l'programari que es troba instal\u00b7lat per poder aconseguir els seus objectius. A continuaci\u00f3 es mostra un gr\u00e0fic (2014) que mostra els errors detectats en el dia \"0\" del llan\u00e7ament de cada paquet de programari i els bugs que encara persisteixen en l'any seg\u00fcent. Ens adonem de seguida que si no actualitzem el programari, tots els errors que hi poden ser utilitzats pels atacants per a comprometre la seguretat.","title":"Seguretat i actualitzacions"},{"location":"unitats/ud5-processos/UD5_SOM/#paquets-en-linux","text":"Els paquets existents en GNU / Linux, s\u00f3n dependents de la distribuci\u00f3 en la qual s'estiguin fent servir; s\u00f3n utilitzats normalment per a la compressi\u00f3 d'aplicacions en diferents formats per a diferents mitjans d'instal\u00b7laci\u00f3. Aquests s\u00f3n un conjunt de fitxers que contenen instruccions per a la reconstrucci\u00f3 de l'aplicaci\u00f3 dins del sistema nou, dins d'aquests, podem trobar, Paquets Binaris i Paquets de codi Font. Els Paquets Binaris, contenen, com s'esmenta, la informaci\u00f3 necess\u00e0ria per reconstruir una aplicaci\u00f3 en un sistema nou, sense necessitat de trobar-se en la mateixa computadora; els m\u00e9s comuns s\u00f3n: DEB: Contenen executables, arxius de configuraci\u00f3, p\u00e0gines d'informaci\u00f3, drets de copyright i altres documentacions, els paquets Debian es col\u00b7loquen en arxius .deb. El nom del paquet ha de contenir: <NumeroDeVersi\u00f3n> - <Versi\u00f3nDeDebian> - <ArquitecturaDeDebian> .deb Un desavantatge d'aquest tipus de paquets, \u00e9s el seu sistema d'actualitzaci\u00f3, a causa que, es necessita tenir tots els arxius, com si es tract\u00e9s una nova instal\u00b7laci\u00f3. Aquests paquets tamb\u00e9 s\u00f3n usats per distribucions basades en la distribuci\u00f3 Debian, algunes d'aquestes, s\u00f3n: Ubuntu, Kubuntu, ZorinOS, Linux Mint, entre otras. RPM: Per les seves sigles en angl\u00e8s Redhat Package Manager, aquest tipus d'empaquetat per Linux va ser desenvolupat per a la distribuci\u00f3 de Red Hat, per tal de crear un sistema f\u00e0cil de crear i instal\u00b7lar. Actualment totes les distribucions basades en Red Hat ocupen els paquets RPM, algunes d'elles s\u00f3n: Fedora i openSUSE. Un avantatge, sobre aquest tipus de paquets sobre altres, \u00e9s la seva forma d'actualitzaci\u00f3 per a les aplicacions, aquests, no necessiten tenir les mateixes dades que l'instal\u00b7lador original, nom\u00e9s pot incloure (si es desitja) els arxius que s'actualitzaran, aix\u00f2 redueix altament el pes del paquet. TGZ: \u00c9s un arxiu de paquets espec\u00edfic per a Unix, comprimit amb el compressor GNU Zip. \u00c9s un paquet de codi font, ocupat per contenir aplicacions, i el seu codi font, per no haver de crear un tipus de paquet espec\u00edfic per a cada distribuci\u00f3. A difer\u00e8ncia dels paquets .deb, o .rpm, aquest no cont\u00e9 instruccions particulars d'instal\u00b7laci\u00f3 per a cada distribuci\u00f3, de manera que la instal\u00b7laci\u00f3 del contingut haur\u00e0 de ser compilat per l'usuari. Ebuild: Paquet usat nom\u00e9s per la distribuci\u00f3 Gentoo, consisteix en un script bash, executable nom\u00e9s en un entorn espec\u00edfic. Els seus arxius, deuen ser arxius de text amb l'extensi\u00f3 .ebuild. El nomenament d'aquest paquet ha d'obeir la regla seg\u00fcent: nom-versi\u00f3n.ebuild El contingut del nom nom\u00e9s pot contenir lletres min\u00fascules sense accentuar, d\u00edgits del zero al nou, guions, guions baixos o el signe d'addici\u00f3.","title":"Paquets en linux:"},{"location":"unitats/ud5-processos/UD5_SOM/#les-actualitzacions","text":"Les actualitzacions dels paquets poden realitzar-se amb tan sols una ordre: apt-get upgrade Podem utilitzar aquesta opci\u00f3 per actualitzar els paquets de la distribuci\u00f3 actual, o b\u00e9 per actualitzar a una nova distribuci\u00f3, tot i que el comandament \u00e9s una millor opci\u00f3. apt-get dist-upgrade \u00c9s molt \u00fatil utilitat junt amb l'opci\u00f3 -u. Aquesta opci\u00f3 mostra la llista completa de paquets que APT s'actualitzar\u00e0. Sense ella, s'estaria actualitzant a cegues. APT descarregar\u00e0 les versions m\u00e9s recents de cada paquet i les instal\u00b7lar\u00e0 de la manera m\u00e9s apropiada. \u00c9s molt important executar apt-get update abans de provar aix\u00f2. \\begin{figure} \\centering \\includegraphics[width=11cm]{img/update.png} \\caption{actualizaci\u00f3n} \\end{figure}","title":"Les actualitzacions"},{"location":"unitats/ud5-processos/UD5_SOM/#els-repositoris","text":"Podem veure la llista de repositoris principal d'Ubuntu escrivint sudo nano /etc/apt/sources.list \\begin{figure} \\centering \\includegraphics[width=11cm]{img/repositoris.png} \\caption{Els repositoris } \\end{figure} El primer que hem de fer \u00e9s una c\u00f2pia per evitar-nos problemes davant de qualsevol modificaci\u00f3. Exemples: deb-src http://archive.ubuntu.com/ubuntu groovy universe restricted main multiverse on: deb: Indica un repositori de paquets pr\u00e8viament compilats. deb-src: \u00c9s un repositori de codi font de programes. http://archive.ubuntu.com/ubuntu: \u00c9s l'identificador uniforme de recursos (per les seves sigles en angl\u00e8s). \u00c9s el link d'acc\u00e9s al servidor on est\u00e0 el repositori. groovy: Indica la versi\u00f3 de sistema operatiu. universe restricted main multiverse: indica el tipus de repositori. Perqu\u00e8 qualsevol canvi que fem en els repositoris funcioni, hem de guardar la llista primer i despr\u00e8s actualitzar la llista de repositoris. Tamb\u00e9 podem afegir repositoris des de la l\u00ednia de comandes: sudo add-apt-repository 'deb https://dl.winehq.org/wine-builds/ubuntu/ groovy main' sudo apt update La comanda sudo add-apt-repository tamb\u00e9 s'utilitza per als paquets personals d'arxius. Per exemple per afegir el repositori ppa de Krita, escrivim: sudo add-apt-repository ppa: kritalime/ppa sudo apt update","title":"Els repositoris"},{"location":"unitats/ud5-processos/UD5_SOM/#instalar-paquets-des-de-els-repositoris","text":"","title":"Instalar paquets des de els repositoris"},{"location":"unitats/ud5-processos/UD5_SOM/#comanda-apt","text":"Per instal\u00b7lar un paquet nou: $ sudo apt-get install nom_del_paquet Opci\u00f3 remove per eliminar un paquet del nostre sistema utilitzem: $ sudo apt-get remove nom_del_paquet \\begin{figure} \\centering \\includegraphics[width=11cm]{img/apt.png} \\caption{La comanda apt } \\end{figure}","title":"Comanda apt:"},{"location":"unitats/ud5-processos/UD5_SOM/#comanda-dpkg","text":"\\begin{figure} \\centering \\includegraphics[width=11cm]{img/dpkg.png} \\caption{La comanda dpkg } \\end{figure}","title":"Comanda dpkg"},{"location":"unitats/ud5-processos/UD5_SOM/#comanda-rpm","text":"A Red Hat l'eina per excel\u00b7l\u00e8ncia per administrar paquets \u00e9s la comanda rpm que posseeix molt\u00edssimes opcions. Internament rpm es basa en una base de dades amb informaci\u00f3 sobre el instal \u00b7 lat, les depend\u00e8ncies existents, etc. Aquesta base de dades \u00e9s actualitzada amb transpar\u00e8ncia pel rpm quan s'instal\u00b7la, s'actualitza o desinstal un paquet. Tamb\u00e9 es pot consultar per con\u00e8ixer informaci\u00f3 diversa sobre el ja instal\u00b7lat en el sistema. \\begin{figure} \\centering \\includegraphics[width=11cm]{img/rpm.png} \\caption{La comanda rpm } \\end{figure}","title":"Comanda rpm"}]}