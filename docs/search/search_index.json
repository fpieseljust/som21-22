{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Benvinguts!! Benivinguts a la web de Sistemes operatius monolloc. Curs 21/22. IES Jaume II \"El Just\" - Tavernes de la Valldigna","title":"Home"},{"location":"#benvinguts","text":"Benivinguts a la web de Sistemes operatius monolloc. Curs 21/22. IES Jaume II \"El Just\" - Tavernes de la Valldigna","title":"Benvinguts!!"},{"location":"about/","text":"Sistemes operatius monolloc IES Jaume II \"El Just\" - Tavernes de la Valldigna Curs 2021-2022 Professors: Ferran Cunyat","title":"About"},{"location":"about/#sistemes-operatius-monolloc","text":"","title":"Sistemes operatius monolloc"},{"location":"about/#ies-jaume-ii-el-just-tavernes-de-la-valldigna","text":"","title":"IES Jaume II \"El Just\" - Tavernes de la Valldigna"},{"location":"about/#curs-2021-2022","text":"Professors: Ferran Cunyat","title":"Curs 2021-2022"},{"location":"unitats/ud3-info/comandaments/","text":"Gesti\u00f3 de la informaci\u00f3 Ja hem vist com gestionar arxius i carpetes a trav\u00e9s de la interf\u00edcie gr\u00e0fica (GUI). En aquesta secci\u00f3 estudiarem els principals comandaments relacionats amb la gesti\u00f3 de la informaci\u00f3 utilitzant la l\u00ednia de comandaments (CLI): - Creaci\u00f3, modificaci\u00f3, eliminaci\u00f3... d'arxius i carpetes. - Creaci\u00f3 de taules de particions. - Formataci\u00f3 de particions. - Muntatge de particions. Execucci\u00f3 de l'interpret d'ordres Per a executar l'interpret d'ordres podeu utilitzar la drecera de teclat Ctrl + Alt + T . Altres opcions menys recomanades s\u00f3n anar a trav\u00e9s del men\u00fa d'aplicacions o utilitzar les icones d'acc\u00e9s. Prompt A l'accedir a la shell, vos apareixer\u00e0 el prompt, indicant que est\u00e0 esperant instruccions: ferran@debian:~$ ferran \u00e9s l'usuari que est\u00e0 executant la shell. debian \u00e9s el nom de la m\u00e0quina sobre la que est\u00e0 executant la shell. Ens podem connectar a altres m\u00e0quines remotes a trav\u00e9s de la shell. ~ indica que en quin directori ens trobem actualment. El s\u00edmbol ~ representa el home de l'usuari, \u00e9s a dir, substituix /home/ferran $ indica que l'usuari no t\u00e9 permisos d'administrador, en cas de tindre permissos d'administrador, apareixer\u00e0 el s\u00edmbol # . Estructura de l\u2019arbre de directoris. El sistema d'arxius de Linux t\u00e9 una estructura jer\u00e0rquica, on tots els directoris pengen d'un, anomenat arrel, que es representa pel car\u00e0cter \"/\". Penjant d'ell podem trobar altres directoris, i aix\u00ed successivament. El conjunt d'un directori de qu\u00e8 pengen altres directoris amb fitxers i m\u00e9s subdirectoris es coneix com a arbre de subdirectoris. Dels directoris m\u00e9s importants destaca el directori home , que cont\u00e9 els arxius personals dels usuaris de sistema. Altres directoris s\u00f3n els seg\u00fcents: /bin \u2192 cont\u00e9 els programes que poden executar tots els usuaris de sistema. S\u00f3n arxius binaris o executables. /boot \u2192 cont\u00e9 els fitxers de configuraci\u00f3 d'arrencada de sistema. /boot/grub \u2192 cont\u00e9 el carregador d'arrencada GRUB. /dev \u2192 cont\u00e9 els arxius de l'maquinari de el sistema. /etc \u2192 cont\u00e9 els fitxers de configuraci\u00f3 de sistema. /home \u2192 \u00e9s el directori que cont\u00e9 els directoris personals de tots els usuaris de sistema. A m\u00e9s, per a cada usuari, tindr\u00e0 el directori: /home/usuari/Escriptori \u2192 cont\u00e9 l'escriptori de l'usuari (en ocasions apareix com Desktop en lloc d'Escriptori). /lib \u2192 cont\u00e9 les biblioteques necess\u00e0ries perqu\u00e8 s'executin els programes que tenim en /bin i /sbin. /media \u2192 cont\u00e9 les unitats f\u00edsiques que tenim muntades o que es munten autom\u00e0ticament, com discs durs, unitats de DVD, pendrives ... /mnt \u2192 directori on es munten sistemes d'arxius de forma temporal, quan sigui necessari. /opt \u2192 aqu\u00ed podem instal\u00b7lar aplicacions que no v\u00e9nen en els repositoris i que per tant no s'instal\u00b7len autom\u00e0ticament. /proc \u2192 cont\u00e9 arxius que reben o envien informaci\u00f3 a l'nucli. Els fitxers que cont\u00e9 realment resideixen en mem\u00f2ria. Aquests fitxers ens permeten obtenir informaci\u00f3 sobre els processos en execuci\u00f3. Per exemple, el fitxer partitions cont\u00e9 informaci\u00f3 de les particions del disc. El fitxer sistemes de fitxers cont\u00e9 els sistemes d'arxius de sistema. /root \u2192 directori personal de l'root o administrador de sistema. /sbin \u2192 cont\u00e9 programes que nom\u00e9s pot executar el superusuari. /usr \u2192 cont\u00e9 els programes d'\u00fas general per a tots els usuaris. /tmp \u2192 cont\u00e9 arxius temporals. /var \u2192 cont\u00e9 informaci\u00f3 variable, registres, dades dels servidors, etc. /var/log \u2192 cont\u00e9 els fitxers de registre (logs). Gesti\u00f3 de fitxers i directoris. Rutes: Rutes relatives: Les rutes relatives indiquen el cam\u00ed per trobar un element, per\u00f2 basant-nos en el directori des del qual s'executa l'ordre, o sigui, des del directori on ens trobem posicionats. Per saber si s\u00f3n correctes o no hem de saber sempre des d'on s'han utilitzat. Vegem algun exemple: Si em trobe en el directori /home i voldria mourem al directori /home/usuari/carpeta1 hauria d'indicar el cam\u00ed fins on vull anar partint des d'on em trobe. Vegem cd usuari/carpeta1 Directori pare Anomenem directori pare, a directori que cont\u00e9 a aquell en el qual ens trobem. \u00c9s fonamental per a la construcci\u00f3 de rutes relatives saber que .. representa el directori pare. Per tant si executo cd .. estic donant l'ordre de canviar des del directori actual al seu pare. Si fem ls -la al directori actual ens monstra un directori . I un directori .. el primer fa refer\u00e8ncia a directori on ens trobem i el segon respectivament fa refer\u00e8ncia a directori pare. Per moure'ns cap enrere fent \u00fas de rutes relatives podem indicar-li a l'ordre cd que es mogui al seu directori pare (un nivell dins de la jerarquia cap enrere) o de diversos alhora depenent de cap a on vulguem moure'ns. Si estem a la carpeta1 i volem pujar 3 nivells seria cd ../../.. Rutes absolutes: El sistema de fitxers \u00e9s una estructura jer\u00e0rquica que en el cas de Linux t\u00e9 una arrel que s'indica quan es posa nom\u00e9s el car\u00e0cter barra /. L'arrel cont\u00e9 els directoris principals de sistema que a la vegada tindran subdirectoris en el seu interior, aquesta estructura de directoris es correspon amb l'est\u00e0ndard de jerarquies de directoris FHS. Quan jo vull indicar on es troba un element fent servir una ruta absoluta, haur\u00e9 d\u2019indicar-li tots els directoris pels quals cal passar comen\u00e7ant des de l'arrel de sistema, SEMPRE. Exemple: al cas anterior, tenint en compte la imatge per accedir a carpeta1 cd /home/usuario/carpeta1 Aquestes rutes solen ser bastant llargues, per\u00f2 com avantatge tenen que funcionen sempre, sense importar el lloc des del qual executi l'ordre. \u00c9s molt recomanable utilitzar la facilitat que ofereix la shell de completar el nom d'un element de sistema de fitxers prement la tecla tabulador. Estalviar\u00e0 molt de temps i possibles errors de mecanografia (tenint en compte que es discriminen maj\u00fascules i min\u00fascules en els noms dels directoris), a aquesta acci\u00f3 la coneixem com autocompletat. Ordres b\u00e0siques: ls La comanda ls permet llistar el contingut d'un directori. Sintaxi: ls [opcions] [directori | fitxer] Algunes opcions: * -l: mostra la sortida en format llarg. * -R: llista recursivament un directori. * -a: llista m\u00e9s els fitxers ocults. Recordeu que els arxius ocults comencen per punt. * -h: mostra la mida dels fitxers en forma m\u00e9s llegible (Ex .: 16M, 4k, etc.) -i: mostra l'identificador de l'i-node associat a cada element. Globbing : wildcards (comodins) i opcions El Globbing ens permet trobar arxius dels quals no coneixem el nom exacte per\u00f2 tenim una idea quins elements de text el componen. Per aix\u00f2 utilitzem els anomenats wildcards (comodins) de manera que aquests serveixen per trobar patrons durant les b\u00fasquedes. Hem vist anteriorment que l'ordre ls llista fitxers i directoris. Suposem que volem llistar nom\u00e9s aquells fitxers que tinguin l'extensi\u00f3 \u201c.doc\u201d. Amb la seg\u00fcent ordre ho aconseguirem: $ ls *.doc En aquest exemple hem indicat que lliste qualsevol arxiu amb l'extensi\u00f3 \u201c.doc\u201d. L'asterisc fa la funci\u00f3 de comod\u00ed (qualsevol cadena de car\u00e0cters). Els car\u00e0cters comod\u00ed poden apareixer al principi, al final o entre mig dels patrons, incl\u00fas poden apar\u00e9ixer diverses vegades. Aix\u00ed com el car\u00e0cter asterisc substitueix qualsevol cadena de text, de longitud indeterminada, el car\u00e0cter ? substitueix un \u00fanic car\u00e0cter, de longitud 1. En aquest cas tamb\u00e9 poden apar\u00e9ixer diverses vegades i en diverses posicions. Per exemple: $ ls arxiu-?.jpg Llistar\u00e0 arxius com arxiu-1.jpg, arxiu-a.jpg... Per\u00f2 no arxius com arxiu-12.jpg. Tenim la possibilitat de passar-li diferents opcions per fer globbing utilitzant els car\u00e0cters {} . Per exemple, si volem llistar els directoris /dev i /home a la vegada, podem fer ls /{dev,home} . Tamb\u00e9 podem utilitzar els mateixos car\u00e0cters per generar opcions num\u00e8riques de forma molt comprimida, per exemple ls {1..9} llistar\u00e0 el contingut de les carpetes 1 a 9. Si no volem que genere d'un en un les llistes num\u00e8riques, li podem indicar un bot en un tercer par\u00e0metre. ls {1..10..2} llistaria el contingut de les carpetes 1,3,5,7 i 9. El globbing es pot utilitzar en altres ordres tamb\u00e9. Exemples: Des del teu directori personal, mostra en format llarg els fitxers tty0 a tty9 de directori /dev, utilitzant car\u00e0cters comodins. Mostra ara els fitxers de directori /dev que comencin per tty, independentment del car\u00e0cters hagi despr\u00e9s. Mostra les entrades del teu directori personal, de manera que et mostri l'i-node de cadascuna i informaci\u00f3 sobre el tipus de fitxer. Mostra les entrades del teu directori personal, en format llarg. Mostra-ara amb la mida dels fitxers en la unitat de mesura m\u00e9s gran que es pugui cd La comanda cd s'utilitza per canviar el directori actual. Sintaxi: cd [directori] exemples: $cd /tmp $cd #canvia a el directori home $cd ~ #canvia a el directori home pwd La comanda pwd indica el cam\u00ed absolut de directori en el qual ens trobem actualment. exemple: $pwd # ens torna alguna cosa com /home/ubuntu Exemples: Mostra la ruta absoluta de directori on est\u00e0s. Mou-te a directori arrel. Aneu ara a directori /etc/init.d Utilitza la comanda que et porti a directori d'on v\u00e9ns. Comprova on estas. soluci\u00f3: pwd cd / cd /etc/init.d cd ~ pwd mkdir La comanda mkdir s'utilitza per crear directoris. exemples: $mkdir bin $mkdir /bin $mkdir -p docs/linuxdocs HOWTO/pdf #es creen els directoris intermedis si cal mv La comanda mv mou un fitxer cap a un altre, o diversos fitxers cap a un directori. Aquest permet al seu torn canviar el nom fitxers o directoris. Sintaxi: mv [opcions] <orige> <dest\u00ed> mv [opcions] <fitxers> <directori> Algunes opcions: -i: executa la comanda de forma interactiva, \u00e9s a dir, pregunta davant de sobreescriure el dest\u00ed si exist\u00eds. -u: actualitza (upgrade) el dest\u00ed amb el orige nom\u00e9s si aquest \u00e9s m\u00e9s recent. exemples: $mv mail.cf mail.cf.old #reanomeneu un fitxer $mv -i *.txt /tmp #mou fitxers acabats en .txt a directori /tmp $mv -u program.c src/ #actualitza el fitxer dest\u00ed si \u00e9s menys recent que el d\u2019orige. cp La comanda cp permet copiar un fitxer en un altre, o diversos fitxers en un directori. sintaxi: cp [opcions] <font> <dest\u00ed> cp [opcions] <fitxers> <directori> Algunes opcions: -R: c\u00f2pia recursivament un directori. -i: utilitza una forma interactiva (pregunta abans de sobreescriure el dest\u00ed). -l: fa enlla\u00e7os forts als fitxers fonts en lloc de copiar-los. exemples: $cp /etc/passwd. # C\u00f2pia un fitxer en el directori actual $cp -i /usr/bin/* sh/tmp # c\u00f2pia interactivament els fitxers acabats en sh en un directori anomenat /tmp rm La comanda rm s'utilitza per esborrar (desenlla\u00e7ar) fitxers Sintaxi: rm [opcions] <fitxers|directoris> Algunes opcions: -r: esborra recursivament un directori. -f: esborra for\u00e7osament en cas que no es tingui perm\u00eds d'escriptura en forma directa. -i: executa la comanda de forma interactiva. exemples: $rm prova $rm -i bin/* $rm -rf /tmp file mostra el tipus de fitxer du (disk usage) mostra l'espai que ocupa el fitxer o directori opcions: -b \u2192 mostra la mida en bytes -h \u2192 mostra la mida en la unitat de mesura m\u00e9s gran, perqu\u00e8 s'entengui millor df (display free) mostra l'espai lliure en els dispositius d'emmagatzematge opcions: -h \u2192 mostra la mida en la unitat de mesura m\u00e9s -k \u2192 --blok-size = 1K -a \u2192 mostra tots, fins i tot els que tinguin mida 0 cat (catenate) mostra el contingut dels fitxers que se li passin com arguments. opcions: -n \u2192 enumera totes les l\u00ednies. head mostra les 10 primeres l\u00ednies dels fitxers que s'indiquin opcions: -n \u2192 mostra les n primeres l\u00ednies en lloc de les 10 primeres. tail mostra les 10 \u00faltimes l\u00ednies dels fitxers que se li indiquin opcions: -n \u2192 mostra les n darreres l\u00ednies -f \u2192 mostra les modificacions de el fitxer en temps real more mostra el contingut dels fitxers per\u00f2 de forma paginada. A difer\u00e8ncia de la comanda cat, quan mostri el contingut de l'arxiu, si aquest ocupa m\u00e9s d'una pantalla, es quedar\u00e0 esperant que es premi una tecla. Si \u00e9s la barra d'espai, s'avan\u00e7ar\u00e0 una p\u00e0gina, i si \u00e9s la tecla enter, s'avan\u00e7ar\u00e0 una l\u00ednia. Amb la tecla q finalitzar\u00e0 l'execuci\u00f3. less mostra el contingut dels fitxers de la mateixa manera que more, amb la difer\u00e8ncia que podem moure'ns per ells utilitzant les tecles de cursor. Filtres i readre\u00e7aments: sort La comanda sort ordena les l\u00ednies d'un fitxer mostrant per la sortida est\u00e0ndard. De no especificar-un fitxer pren l'entrada est\u00e0ndard. Sintaxi: sort [opcions] [fitxer] Algunes opcions: -r: ordena a l'inrev\u00e9s. -f: tracta les maj\u00fascules i min\u00fascules per igual. -g: ordena de forma num\u00e8rica, de manera que no cal que els n\u00fameros es omplin amb zeros per l'esquerra. Exemple: $sort -f /etc/passwd ln crea un enlla\u00e7 a el fitxer o directori que se li especifiqui. Si \u00e9s a un directori, l'enlla\u00e7 ser\u00e0 simb\u00f2lic. opcions: -s \u2192 crea un enlla\u00e7 simb\u00f2lic en comptes de dur -t \u2192 especifica el directori on es crearan els enlla\u00e7os cut mostra nom\u00e9s certes l\u00ednies dels fitxers que se li passin com a argument. opcions: -b \u2192 mostra nom\u00e9s els bytes que se li especifiquin -c \u2192 mostra nom\u00e9s els car\u00e0cters que se li especifiquin -d \u2192 fa servir el car\u00e0cter que se li especifiqui com a delimitador en comptes del tabulador -f \u2192 mostra nom\u00e9s els camps que se li indiquin a la llista. Pot ser un camp, una s\u00e8rie de camps separats per comes o un rang. -s \u2192 no mostra les l\u00ednies que no continguin el delimitador --output-delimiter = cadena \u2192 fa servir la cadena com a delimitador de sortida en comptes del delimitador d'entrada. grep mostra les l\u00ednies d'un fitxer que coincideixen amb un patr\u00f3 especificat. opcions: -r \u2192 -R \u2192 per buscar de forma recursiva dins dels fitxers d'un directori -n \u2192 mostra el nombre corresponent de la l\u00ednia en qu\u00e8 es troba el patr\u00f3 -i \u2192 no distingeix entre maj\u00fascules i min\u00fascules -v \u2192 mostra les l\u00ednies que no es corresponen amb el patr\u00f3 -w \u2192 el patr\u00f3 ha d'apar\u00e8ixer com una paraula completa i no com una part d'una paraula -c \u2192 escriu el nombre de l\u00ednies que satisfan la condici\u00f3 -l \u2192 s'escriuen els noms dels fitxers que contenen l\u00ednies buscades patr\u00f3: *text* \u2192 l\u00ednies que continguin la cadena \"text\" ^text \u2192 l\u00ednies que comencin per \"text\" ^[^text] \u2192 l\u00ednies que no comencen per \"text\" *text \u2192 l\u00ednies que acabin per \"text\" readre\u00e7aments < \u2192 redirecciona l'entrada est\u00e0ndard substituint-la per l'arxiu que s'indique. > \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. >> \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. 2> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. 2>> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. Filtres o canonades Les canonades o filtres s'utilitzen en una l\u00ednia d'ordres per a connectar la sortida est\u00e0ndard d'una ordre amb l'entrada est\u00e0ndard d'un altre. Per a aix\u00f2 s'utilitza el car\u00e0cter |. Comprimir/descomprimir Comanda gzip: Si el que necessites \u00e9s comprimir nom\u00e9s un arxiu, nom\u00e9s cal escriure el seu nom despr\u00e9s de la comanda gzip. Si no et trobes en el mateix directori on estan ubicats els arxius, haur\u00e0s d'escriure tamb\u00e9 la ruta. Una cosa semblant al que fem en el seg\u00fcent exemple: gzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg\" (crearia un fitxer amb extensi\u00f3 .gz) Per a descomprimir-lo utilitzariem l\u2019ordre : gunzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg.gz\" Podem comprimir m\u00e9s d\u2019un arxiu a la vegada i crear\u00e0 3 fitxers nous comprimits: gzip arxiu1.txt arxiu2.txt arxiu3.txt Comanda tar: En realitat, l'ordre tar est\u00e0 pensat per crear un nou arxiu que actu\u00ef com a contenidor d'altres arxius, per\u00f2 no els comprimeix. Aix\u00ed, per exemple, podem crear un arxiu que contingui en el seu interior totes les imatges en format jpeg d'un directori, escrivint la seg\u00fcent ordre: tar -vcf ~/Imatges/wallpaper/imagenes.tar ~ /Imatges/wallpaper/*.jpeg ``` En el nostre exemple, hem utilitzat la mateixa ruta com a origen i com a destinaci\u00f3, perqu\u00e8 puguis veure a la finestra de l'explorador d'arxius del que est\u00e0 passant. No obstant aix\u00f2, tu pots fer servir les que prefereixis.En aquest cas, l'argument v ens permet obtenir detalls de l'funcionament de tar, l'argument c indica que volem crear un arxiu i l'argument f especifica el nom de l'arxiu contenidor (en aquest exemple, Im\u00e1genes.tar). A continuaci\u00f3, nom\u00e9s ens falta incloure els arxius que anem a emmagatzemar en el contenidor (en el nostre exemple, tots els que acabin en .jpeg). Comprovar el contingut d'un arxiu contenidor Un cop creat l'arxiu contenidor, podrem consultar el seu contingut canviant l'argument c per t. Aix\u00ed, per veure el contingut de l'arxiu anterior, escriurem el seg\u00fcent: tar -vtf imagenes.tar Hem dit a el principi que l'ordre tar, per si mateix, no comprimeix la informaci\u00f3 que guarda dins de l'arxiu contenidor. No obstant aix\u00f2, podem utilitzar l'argument z perqu\u00e8 la sortida de l'ordre tar s'envi\u00ef a la comanda gzip obtenint aix\u00ed un arxiu comprimit. Per comprovar-ho, tornem a la carpeta amb les imatges originals: tar -czvf imagenes.tar.gz *.jpeg A m\u00e9s, fins i tot podem triar enviar-los a bzip2, un altre comanda de compressi\u00f3 que aplica algoritmes diferents a gzip. Per aconseguir-ho, nom\u00e9s cal canviar l'argument z, que afeg\u00edem en l'exemple anterior, pel l'argument j. Per comptant, la comanda ens quedaria aix\u00ed: tar -cjvf imagenes.tar.bz2 *.jpeg ```","title":"Comandaments"},{"location":"unitats/ud3-info/comandaments/#gestio-de-la-informacio","text":"Ja hem vist com gestionar arxius i carpetes a trav\u00e9s de la interf\u00edcie gr\u00e0fica (GUI). En aquesta secci\u00f3 estudiarem els principals comandaments relacionats amb la gesti\u00f3 de la informaci\u00f3 utilitzant la l\u00ednia de comandaments (CLI): - Creaci\u00f3, modificaci\u00f3, eliminaci\u00f3... d'arxius i carpetes. - Creaci\u00f3 de taules de particions. - Formataci\u00f3 de particions. - Muntatge de particions.","title":"Gesti\u00f3 de la informaci\u00f3"},{"location":"unitats/ud3-info/comandaments/#execuccio-de-linterpret-dordres","text":"Per a executar l'interpret d'ordres podeu utilitzar la drecera de teclat Ctrl + Alt + T . Altres opcions menys recomanades s\u00f3n anar a trav\u00e9s del men\u00fa d'aplicacions o utilitzar les icones d'acc\u00e9s.","title":"Execucci\u00f3 de l'interpret d'ordres"},{"location":"unitats/ud3-info/comandaments/#prompt","text":"A l'accedir a la shell, vos apareixer\u00e0 el prompt, indicant que est\u00e0 esperant instruccions: ferran@debian:~$ ferran \u00e9s l'usuari que est\u00e0 executant la shell. debian \u00e9s el nom de la m\u00e0quina sobre la que est\u00e0 executant la shell. Ens podem connectar a altres m\u00e0quines remotes a trav\u00e9s de la shell. ~ indica que en quin directori ens trobem actualment. El s\u00edmbol ~ representa el home de l'usuari, \u00e9s a dir, substituix /home/ferran $ indica que l'usuari no t\u00e9 permisos d'administrador, en cas de tindre permissos d'administrador, apareixer\u00e0 el s\u00edmbol # .","title":"Prompt"},{"location":"unitats/ud3-info/comandaments/#estructura-de-larbre-de-directoris","text":"El sistema d'arxius de Linux t\u00e9 una estructura jer\u00e0rquica, on tots els directoris pengen d'un, anomenat arrel, que es representa pel car\u00e0cter \"/\". Penjant d'ell podem trobar altres directoris, i aix\u00ed successivament. El conjunt d'un directori de qu\u00e8 pengen altres directoris amb fitxers i m\u00e9s subdirectoris es coneix com a arbre de subdirectoris. Dels directoris m\u00e9s importants destaca el directori home , que cont\u00e9 els arxius personals dels usuaris de sistema. Altres directoris s\u00f3n els seg\u00fcents: /bin \u2192 cont\u00e9 els programes que poden executar tots els usuaris de sistema. S\u00f3n arxius binaris o executables. /boot \u2192 cont\u00e9 els fitxers de configuraci\u00f3 d'arrencada de sistema. /boot/grub \u2192 cont\u00e9 el carregador d'arrencada GRUB. /dev \u2192 cont\u00e9 els arxius de l'maquinari de el sistema. /etc \u2192 cont\u00e9 els fitxers de configuraci\u00f3 de sistema. /home \u2192 \u00e9s el directori que cont\u00e9 els directoris personals de tots els usuaris de sistema. A m\u00e9s, per a cada usuari, tindr\u00e0 el directori: /home/usuari/Escriptori \u2192 cont\u00e9 l'escriptori de l'usuari (en ocasions apareix com Desktop en lloc d'Escriptori). /lib \u2192 cont\u00e9 les biblioteques necess\u00e0ries perqu\u00e8 s'executin els programes que tenim en /bin i /sbin. /media \u2192 cont\u00e9 les unitats f\u00edsiques que tenim muntades o que es munten autom\u00e0ticament, com discs durs, unitats de DVD, pendrives ... /mnt \u2192 directori on es munten sistemes d'arxius de forma temporal, quan sigui necessari. /opt \u2192 aqu\u00ed podem instal\u00b7lar aplicacions que no v\u00e9nen en els repositoris i que per tant no s'instal\u00b7len autom\u00e0ticament. /proc \u2192 cont\u00e9 arxius que reben o envien informaci\u00f3 a l'nucli. Els fitxers que cont\u00e9 realment resideixen en mem\u00f2ria. Aquests fitxers ens permeten obtenir informaci\u00f3 sobre els processos en execuci\u00f3. Per exemple, el fitxer partitions cont\u00e9 informaci\u00f3 de les particions del disc. El fitxer sistemes de fitxers cont\u00e9 els sistemes d'arxius de sistema. /root \u2192 directori personal de l'root o administrador de sistema. /sbin \u2192 cont\u00e9 programes que nom\u00e9s pot executar el superusuari. /usr \u2192 cont\u00e9 els programes d'\u00fas general per a tots els usuaris. /tmp \u2192 cont\u00e9 arxius temporals. /var \u2192 cont\u00e9 informaci\u00f3 variable, registres, dades dels servidors, etc. /var/log \u2192 cont\u00e9 els fitxers de registre (logs).","title":"Estructura de l\u2019arbre de directoris."},{"location":"unitats/ud3-info/comandaments/#gestio-de-fitxers-i-directoris","text":"","title":"Gesti\u00f3 de fitxers i directoris."},{"location":"unitats/ud3-info/comandaments/#rutes","text":"","title":"Rutes:"},{"location":"unitats/ud3-info/comandaments/#rutes-relatives","text":"Les rutes relatives indiquen el cam\u00ed per trobar un element, per\u00f2 basant-nos en el directori des del qual s'executa l'ordre, o sigui, des del directori on ens trobem posicionats. Per saber si s\u00f3n correctes o no hem de saber sempre des d'on s'han utilitzat. Vegem algun exemple: Si em trobe en el directori /home i voldria mourem al directori /home/usuari/carpeta1 hauria d'indicar el cam\u00ed fins on vull anar partint des d'on em trobe. Vegem cd usuari/carpeta1","title":"Rutes relatives:"},{"location":"unitats/ud3-info/comandaments/#directori-pare","text":"Anomenem directori pare, a directori que cont\u00e9 a aquell en el qual ens trobem. \u00c9s fonamental per a la construcci\u00f3 de rutes relatives saber que .. representa el directori pare. Per tant si executo cd .. estic donant l'ordre de canviar des del directori actual al seu pare. Si fem ls -la al directori actual ens monstra un directori . I un directori .. el primer fa refer\u00e8ncia a directori on ens trobem i el segon respectivament fa refer\u00e8ncia a directori pare. Per moure'ns cap enrere fent \u00fas de rutes relatives podem indicar-li a l'ordre cd que es mogui al seu directori pare (un nivell dins de la jerarquia cap enrere) o de diversos alhora depenent de cap a on vulguem moure'ns. Si estem a la carpeta1 i volem pujar 3 nivells seria cd ../../..","title":"Directori pare"},{"location":"unitats/ud3-info/comandaments/#rutes-absolutes","text":"El sistema de fitxers \u00e9s una estructura jer\u00e0rquica que en el cas de Linux t\u00e9 una arrel que s'indica quan es posa nom\u00e9s el car\u00e0cter barra /. L'arrel cont\u00e9 els directoris principals de sistema que a la vegada tindran subdirectoris en el seu interior, aquesta estructura de directoris es correspon amb l'est\u00e0ndard de jerarquies de directoris FHS. Quan jo vull indicar on es troba un element fent servir una ruta absoluta, haur\u00e9 d\u2019indicar-li tots els directoris pels quals cal passar comen\u00e7ant des de l'arrel de sistema, SEMPRE. Exemple: al cas anterior, tenint en compte la imatge per accedir a carpeta1 cd /home/usuario/carpeta1 Aquestes rutes solen ser bastant llargues, per\u00f2 com avantatge tenen que funcionen sempre, sense importar el lloc des del qual executi l'ordre. \u00c9s molt recomanable utilitzar la facilitat que ofereix la shell de completar el nom d'un element de sistema de fitxers prement la tecla tabulador. Estalviar\u00e0 molt de temps i possibles errors de mecanografia (tenint en compte que es discriminen maj\u00fascules i min\u00fascules en els noms dels directoris), a aquesta acci\u00f3 la coneixem com autocompletat.","title":"Rutes absolutes:"},{"location":"unitats/ud3-info/comandaments/#ordres-basiques","text":"","title":"Ordres b\u00e0siques:"},{"location":"unitats/ud3-info/comandaments/#ls","text":"La comanda ls permet llistar el contingut d'un directori. Sintaxi: ls [opcions] [directori | fitxer] Algunes opcions: * -l: mostra la sortida en format llarg. * -R: llista recursivament un directori. * -a: llista m\u00e9s els fitxers ocults. Recordeu que els arxius ocults comencen per punt. * -h: mostra la mida dels fitxers en forma m\u00e9s llegible (Ex .: 16M, 4k, etc.) -i: mostra l'identificador de l'i-node associat a cada element.","title":"ls"},{"location":"unitats/ud3-info/comandaments/#globbing-wildcards-comodins-i-opcions","text":"El Globbing ens permet trobar arxius dels quals no coneixem el nom exacte per\u00f2 tenim una idea quins elements de text el componen. Per aix\u00f2 utilitzem els anomenats wildcards (comodins) de manera que aquests serveixen per trobar patrons durant les b\u00fasquedes. Hem vist anteriorment que l'ordre ls llista fitxers i directoris. Suposem que volem llistar nom\u00e9s aquells fitxers que tinguin l'extensi\u00f3 \u201c.doc\u201d. Amb la seg\u00fcent ordre ho aconseguirem: $ ls *.doc En aquest exemple hem indicat que lliste qualsevol arxiu amb l'extensi\u00f3 \u201c.doc\u201d. L'asterisc fa la funci\u00f3 de comod\u00ed (qualsevol cadena de car\u00e0cters). Els car\u00e0cters comod\u00ed poden apareixer al principi, al final o entre mig dels patrons, incl\u00fas poden apar\u00e9ixer diverses vegades. Aix\u00ed com el car\u00e0cter asterisc substitueix qualsevol cadena de text, de longitud indeterminada, el car\u00e0cter ? substitueix un \u00fanic car\u00e0cter, de longitud 1. En aquest cas tamb\u00e9 poden apar\u00e9ixer diverses vegades i en diverses posicions. Per exemple: $ ls arxiu-?.jpg Llistar\u00e0 arxius com arxiu-1.jpg, arxiu-a.jpg... Per\u00f2 no arxius com arxiu-12.jpg. Tenim la possibilitat de passar-li diferents opcions per fer globbing utilitzant els car\u00e0cters {} . Per exemple, si volem llistar els directoris /dev i /home a la vegada, podem fer ls /{dev,home} . Tamb\u00e9 podem utilitzar els mateixos car\u00e0cters per generar opcions num\u00e8riques de forma molt comprimida, per exemple ls {1..9} llistar\u00e0 el contingut de les carpetes 1 a 9. Si no volem que genere d'un en un les llistes num\u00e8riques, li podem indicar un bot en un tercer par\u00e0metre. ls {1..10..2} llistaria el contingut de les carpetes 1,3,5,7 i 9. El globbing es pot utilitzar en altres ordres tamb\u00e9. Exemples: Des del teu directori personal, mostra en format llarg els fitxers tty0 a tty9 de directori /dev, utilitzant car\u00e0cters comodins. Mostra ara els fitxers de directori /dev que comencin per tty, independentment del car\u00e0cters hagi despr\u00e9s. Mostra les entrades del teu directori personal, de manera que et mostri l'i-node de cadascuna i informaci\u00f3 sobre el tipus de fitxer. Mostra les entrades del teu directori personal, en format llarg. Mostra-ara amb la mida dels fitxers en la unitat de mesura m\u00e9s gran que es pugui","title":"Globbing: wildcards (comodins) i opcions"},{"location":"unitats/ud3-info/comandaments/#cd","text":"La comanda cd s'utilitza per canviar el directori actual. Sintaxi: cd [directori] exemples: $cd /tmp $cd #canvia a el directori home $cd ~ #canvia a el directori home","title":"cd"},{"location":"unitats/ud3-info/comandaments/#pwd","text":"La comanda pwd indica el cam\u00ed absolut de directori en el qual ens trobem actualment. exemple: $pwd # ens torna alguna cosa com /home/ubuntu Exemples: Mostra la ruta absoluta de directori on est\u00e0s. Mou-te a directori arrel. Aneu ara a directori /etc/init.d Utilitza la comanda que et porti a directori d'on v\u00e9ns. Comprova on estas. soluci\u00f3: pwd cd / cd /etc/init.d cd ~ pwd","title":"pwd"},{"location":"unitats/ud3-info/comandaments/#mkdir","text":"La comanda mkdir s'utilitza per crear directoris. exemples: $mkdir bin $mkdir /bin $mkdir -p docs/linuxdocs HOWTO/pdf #es creen els directoris intermedis si cal","title":"mkdir"},{"location":"unitats/ud3-info/comandaments/#mv","text":"La comanda mv mou un fitxer cap a un altre, o diversos fitxers cap a un directori. Aquest permet al seu torn canviar el nom fitxers o directoris. Sintaxi: mv [opcions] <orige> <dest\u00ed> mv [opcions] <fitxers> <directori> Algunes opcions: -i: executa la comanda de forma interactiva, \u00e9s a dir, pregunta davant de sobreescriure el dest\u00ed si exist\u00eds. -u: actualitza (upgrade) el dest\u00ed amb el orige nom\u00e9s si aquest \u00e9s m\u00e9s recent. exemples: $mv mail.cf mail.cf.old #reanomeneu un fitxer $mv -i *.txt /tmp #mou fitxers acabats en .txt a directori /tmp $mv -u program.c src/ #actualitza el fitxer dest\u00ed si \u00e9s menys recent que el d\u2019orige.","title":"mv"},{"location":"unitats/ud3-info/comandaments/#cp","text":"La comanda cp permet copiar un fitxer en un altre, o diversos fitxers en un directori. sintaxi: cp [opcions] <font> <dest\u00ed> cp [opcions] <fitxers> <directori> Algunes opcions: -R: c\u00f2pia recursivament un directori. -i: utilitza una forma interactiva (pregunta abans de sobreescriure el dest\u00ed). -l: fa enlla\u00e7os forts als fitxers fonts en lloc de copiar-los. exemples: $cp /etc/passwd. # C\u00f2pia un fitxer en el directori actual $cp -i /usr/bin/* sh/tmp # c\u00f2pia interactivament els fitxers acabats en sh en un directori anomenat /tmp","title":"cp"},{"location":"unitats/ud3-info/comandaments/#rm","text":"La comanda rm s'utilitza per esborrar (desenlla\u00e7ar) fitxers Sintaxi: rm [opcions] <fitxers|directoris> Algunes opcions: -r: esborra recursivament un directori. -f: esborra for\u00e7osament en cas que no es tingui perm\u00eds d'escriptura en forma directa. -i: executa la comanda de forma interactiva. exemples: $rm prova $rm -i bin/* $rm -rf /tmp","title":"rm"},{"location":"unitats/ud3-info/comandaments/#file","text":"mostra el tipus de fitxer","title":"file"},{"location":"unitats/ud3-info/comandaments/#du-disk-usage","text":"mostra l'espai que ocupa el fitxer o directori opcions: -b \u2192 mostra la mida en bytes -h \u2192 mostra la mida en la unitat de mesura m\u00e9s gran, perqu\u00e8 s'entengui millor","title":"du (disk usage)"},{"location":"unitats/ud3-info/comandaments/#df-display-free","text":"mostra l'espai lliure en els dispositius d'emmagatzematge opcions: -h \u2192 mostra la mida en la unitat de mesura m\u00e9s -k \u2192 --blok-size = 1K -a \u2192 mostra tots, fins i tot els que tinguin mida 0","title":"df (display free)"},{"location":"unitats/ud3-info/comandaments/#cat-catenate","text":"mostra el contingut dels fitxers que se li passin com arguments. opcions: -n \u2192 enumera totes les l\u00ednies.","title":"cat (catenate)"},{"location":"unitats/ud3-info/comandaments/#head","text":"mostra les 10 primeres l\u00ednies dels fitxers que s'indiquin opcions: -n \u2192 mostra les n primeres l\u00ednies en lloc de les 10 primeres.","title":"head"},{"location":"unitats/ud3-info/comandaments/#tail","text":"mostra les 10 \u00faltimes l\u00ednies dels fitxers que se li indiquin opcions: -n \u2192 mostra les n darreres l\u00ednies -f \u2192 mostra les modificacions de el fitxer en temps real","title":"tail"},{"location":"unitats/ud3-info/comandaments/#more","text":"mostra el contingut dels fitxers per\u00f2 de forma paginada. A difer\u00e8ncia de la comanda cat, quan mostri el contingut de l'arxiu, si aquest ocupa m\u00e9s d'una pantalla, es quedar\u00e0 esperant que es premi una tecla. Si \u00e9s la barra d'espai, s'avan\u00e7ar\u00e0 una p\u00e0gina, i si \u00e9s la tecla enter, s'avan\u00e7ar\u00e0 una l\u00ednia. Amb la tecla q finalitzar\u00e0 l'execuci\u00f3.","title":"more"},{"location":"unitats/ud3-info/comandaments/#less","text":"mostra el contingut dels fitxers de la mateixa manera que more, amb la difer\u00e8ncia que podem moure'ns per ells utilitzant les tecles de cursor.","title":"less"},{"location":"unitats/ud3-info/comandaments/#filtres-i-readrecaments","text":"","title":"Filtres i readre\u00e7aments:"},{"location":"unitats/ud3-info/comandaments/#sort","text":"La comanda sort ordena les l\u00ednies d'un fitxer mostrant per la sortida est\u00e0ndard. De no especificar-un fitxer pren l'entrada est\u00e0ndard. Sintaxi: sort [opcions] [fitxer] Algunes opcions: -r: ordena a l'inrev\u00e9s. -f: tracta les maj\u00fascules i min\u00fascules per igual. -g: ordena de forma num\u00e8rica, de manera que no cal que els n\u00fameros es omplin amb zeros per l'esquerra. Exemple: $sort -f /etc/passwd","title":"sort"},{"location":"unitats/ud3-info/comandaments/#ln","text":"crea un enlla\u00e7 a el fitxer o directori que se li especifiqui. Si \u00e9s a un directori, l'enlla\u00e7 ser\u00e0 simb\u00f2lic. opcions: -s \u2192 crea un enlla\u00e7 simb\u00f2lic en comptes de dur -t \u2192 especifica el directori on es crearan els enlla\u00e7os","title":"ln"},{"location":"unitats/ud3-info/comandaments/#cut","text":"mostra nom\u00e9s certes l\u00ednies dels fitxers que se li passin com a argument. opcions: -b \u2192 mostra nom\u00e9s els bytes que se li especifiquin -c \u2192 mostra nom\u00e9s els car\u00e0cters que se li especifiquin -d \u2192 fa servir el car\u00e0cter que se li especifiqui com a delimitador en comptes del tabulador -f \u2192 mostra nom\u00e9s els camps que se li indiquin a la llista. Pot ser un camp, una s\u00e8rie de camps separats per comes o un rang. -s \u2192 no mostra les l\u00ednies que no continguin el delimitador --output-delimiter = cadena \u2192 fa servir la cadena com a delimitador de sortida en comptes del delimitador d'entrada.","title":"cut"},{"location":"unitats/ud3-info/comandaments/#grep","text":"mostra les l\u00ednies d'un fitxer que coincideixen amb un patr\u00f3 especificat. opcions: -r \u2192 -R \u2192 per buscar de forma recursiva dins dels fitxers d'un directori -n \u2192 mostra el nombre corresponent de la l\u00ednia en qu\u00e8 es troba el patr\u00f3 -i \u2192 no distingeix entre maj\u00fascules i min\u00fascules -v \u2192 mostra les l\u00ednies que no es corresponen amb el patr\u00f3 -w \u2192 el patr\u00f3 ha d'apar\u00e8ixer com una paraula completa i no com una part d'una paraula -c \u2192 escriu el nombre de l\u00ednies que satisfan la condici\u00f3 -l \u2192 s'escriuen els noms dels fitxers que contenen l\u00ednies buscades patr\u00f3: *text* \u2192 l\u00ednies que continguin la cadena \"text\" ^text \u2192 l\u00ednies que comencin per \"text\" ^[^text] \u2192 l\u00ednies que no comencen per \"text\" *text \u2192 l\u00ednies que acabin per \"text\"","title":"grep"},{"location":"unitats/ud3-info/comandaments/#readrecaments","text":"< \u2192 redirecciona l'entrada est\u00e0ndard substituint-la per l'arxiu que s'indique. > \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. >> \u2192redirecciona la sortida d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior. 2> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, esborrant la informaci\u00f3 que el fitxer contenia. 2>> \u2192redirecciona la sortida d'errors d'un proc\u00e9s a el fitxer que se li indiqui, per\u00f2 afegint aquesta sortida a la fi de el fitxer, sense esborrar l'anterior.","title":"readre\u00e7aments"},{"location":"unitats/ud3-info/comandaments/#filtres-o-canonades","text":"Les canonades o filtres s'utilitzen en una l\u00ednia d'ordres per a connectar la sortida est\u00e0ndard d'una ordre amb l'entrada est\u00e0ndard d'un altre. Per a aix\u00f2 s'utilitza el car\u00e0cter |.","title":"Filtres o canonades"},{"location":"unitats/ud3-info/comandaments/#comprimirdescomprimir","text":"","title":"Comprimir/descomprimir"},{"location":"unitats/ud3-info/comandaments/#comanda-gzip","text":"Si el que necessites \u00e9s comprimir nom\u00e9s un arxiu, nom\u00e9s cal escriure el seu nom despr\u00e9s de la comanda gzip. Si no et trobes en el mateix directori on estan ubicats els arxius, haur\u00e0s d'escriure tamb\u00e9 la ruta. Una cosa semblant al que fem en el seg\u00fcent exemple: gzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg\" (crearia un fitxer amb extensi\u00f3 .gz) Per a descomprimir-lo utilitzariem l\u2019ordre : gunzip \"/home/usuario/Im\u00e1genes/wallpaper/photo01.jpeg.gz\" Podem comprimir m\u00e9s d\u2019un arxiu a la vegada i crear\u00e0 3 fitxers nous comprimits: gzip arxiu1.txt arxiu2.txt arxiu3.txt","title":"Comanda gzip:"},{"location":"unitats/ud3-info/comandaments/#comanda-tar","text":"En realitat, l'ordre tar est\u00e0 pensat per crear un nou arxiu que actu\u00ef com a contenidor d'altres arxius, per\u00f2 no els comprimeix. Aix\u00ed, per exemple, podem crear un arxiu que contingui en el seu interior totes les imatges en format jpeg d'un directori, escrivint la seg\u00fcent ordre: tar -vcf ~/Imatges/wallpaper/imagenes.tar ~ /Imatges/wallpaper/*.jpeg ``` En el nostre exemple, hem utilitzat la mateixa ruta com a origen i com a destinaci\u00f3, perqu\u00e8 puguis veure a la finestra de l'explorador d'arxius del que est\u00e0 passant. No obstant aix\u00f2, tu pots fer servir les que prefereixis.En aquest cas, l'argument v ens permet obtenir detalls de l'funcionament de tar, l'argument c indica que volem crear un arxiu i l'argument f especifica el nom de l'arxiu contenidor (en aquest exemple, Im\u00e1genes.tar). A continuaci\u00f3, nom\u00e9s ens falta incloure els arxius que anem a emmagatzemar en el contenidor (en el nostre exemple, tots els que acabin en .jpeg). Comprovar el contingut d'un arxiu contenidor Un cop creat l'arxiu contenidor, podrem consultar el seu contingut canviant l'argument c per t. Aix\u00ed, per veure el contingut de l'arxiu anterior, escriurem el seg\u00fcent: tar -vtf imagenes.tar Hem dit a el principi que l'ordre tar, per si mateix, no comprimeix la informaci\u00f3 que guarda dins de l'arxiu contenidor. No obstant aix\u00f2, podem utilitzar l'argument z perqu\u00e8 la sortida de l'ordre tar s'envi\u00ef a la comanda gzip obtenint aix\u00ed un arxiu comprimit. Per comprovar-ho, tornem a la carpeta amb les imatges originals: tar -czvf imagenes.tar.gz *.jpeg A m\u00e9s, fins i tot podem triar enviar-los a bzip2, un altre comanda de compressi\u00f3 que aplica algoritmes diferents a gzip. Per aconseguir-ho, nom\u00e9s cal canviar l'argument z, que afeg\u00edem en l'exemple anterior, pel l'argument j. Per comptant, la comanda ens quedaria aix\u00ed: tar -cjvf imagenes.tar.bz2 *.jpeg ```","title":"Comanda tar:"}]}